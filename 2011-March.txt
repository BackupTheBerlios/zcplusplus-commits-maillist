From zaimoni at mail.berlios.de  Thu Mar  3 09:39:42 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Thu,  3 Mar 2011 09:39:42 +0100
Subject: [Zcplusplus-commits] r619 - trunk/tests/zcc.in/decl.C99
Message-ID: <20110303083942.7EB09481320@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-03 09:39:42 +0100 (Thu, 03 Mar 2011)
New Revision: 619

Modified:
   trunk/tests/zcc.in/decl.C99/Pass_struct_def.in
Log:
adjust Pass_struct_def.in

Modified: trunk/tests/zcc.in/decl.C99/Pass_struct_def.in
===================================================================
--- trunk/tests/zcc.in/decl.C99/Pass_struct_def.in	2011-02-27 02:16:29 UTC (rev 618)
+++ trunk/tests/zcc.in/decl.C99/Pass_struct_def.in	2011-03-03 08:39:42 UTC (rev 619)
@@ -1,9 +1,10 @@
 SUFFIXES h hpp
+OBJECTLIKE_MACRO THREAD_LOCAL _Thread_Local thread_local
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined struct
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 struct good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +28,205 @@
 const volatile extern struct good_test x13;
 volatile extern const struct good_test x14;
 volatile const extern struct good_test x15;
-
 volatile static struct good_test x16;
 const static volatile struct good_test x17;
 const volatile static struct good_test x18;
 volatile static const struct good_test x19;
 volatile const static struct good_test x20;
 
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL struct good_test x21;
+extern THREAD_LOCAL const struct good_test x22;
+extern THREAD_LOCAL volatile struct good_test x23;
+extern THREAD_LOCAL const volatile struct good_test x24;
+extern THREAD_LOCAL volatile const struct good_test x25;
+THREAD_LOCAL extern struct good_test x26;
+THREAD_LOCAL extern const struct good_test x27;
+THREAD_LOCAL extern volatile struct good_test x28;
+THREAD_LOCAL extern const volatile struct good_test x29;
+THREAD_LOCAL extern volatile const struct good_test x30;
+
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL struct good_test x31;
+static THREAD_LOCAL const struct good_test x32;
+static THREAD_LOCAL volatile struct good_test x33;
+static THREAD_LOCAL const volatile struct good_test x34;
+static THREAD_LOCAL volatile const struct good_test x35;
+THREAD_LOCAL static struct good_test x36;
+THREAD_LOCAL static const struct good_test x37;
+THREAD_LOCAL static volatile struct good_test x38;
+THREAD_LOCAL static const volatile struct good_test x39;
+THREAD_LOCAL static volatile const struct good_test x40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL struct good_test x41;
+const extern THREAD_LOCAL struct good_test x42;
+extern volatile THREAD_LOCAL struct good_test x43;
+volatile extern THREAD_LOCAL struct good_test x44;
+extern const THREAD_LOCAL volatile struct good_test x45;
+extern const volatile THREAD_LOCAL struct good_test x46;
+const extern THREAD_LOCAL volatile struct good_test x47;
+const extern volatile THREAD_LOCAL struct good_test x48;
+const volatile extern THREAD_LOCAL struct good_test x49;
+extern volatile THREAD_LOCAL const struct good_test x50;
+extern volatile const THREAD_LOCAL struct good_test x51;
+volatile extern THREAD_LOCAL const struct good_test x52;
+volatile extern const THREAD_LOCAL struct good_test x53;
+volatile const extern THREAD_LOCAL struct good_test x54;
+THREAD_LOCAL const extern struct good_test x55;
+const THREAD_LOCAL extern struct good_test x56;
+THREAD_LOCAL volatile extern struct good_test x57;
+volatile THREAD_LOCAL extern struct good_test x58;
+THREAD_LOCAL const extern volatile struct good_test x59;
+THREAD_LOCAL const volatile extern struct good_test x60;
+const THREAD_LOCAL extern volatile struct good_test x61;
+const THREAD_LOCAL volatile extern struct good_test x62;
+const volatile THREAD_LOCAL extern struct good_test x63;
+THREAD_LOCAL volatile extern const struct good_test x64;
+THREAD_LOCAL volatile const extern struct good_test x65;
+volatile THREAD_LOCAL extern const struct good_test x66;
+volatile THREAD_LOCAL const extern struct good_test x67;
+volatile const THREAD_LOCAL extern struct good_test x68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL struct good_test x69;
+const static THREAD_LOCAL struct good_test x70;
+static volatile THREAD_LOCAL struct good_test x71;
+volatile static THREAD_LOCAL struct good_test x72;
+static const THREAD_LOCAL volatile struct good_test x73;
+static const volatile THREAD_LOCAL struct good_test x74;
+const static THREAD_LOCAL volatile struct good_test x75;
+const static volatile THREAD_LOCAL struct good_test x76;
+const volatile static THREAD_LOCAL struct good_test x77;
+static volatile THREAD_LOCAL const struct good_test x78;
+static volatile const THREAD_LOCAL struct good_test x79;
+volatile static THREAD_LOCAL const struct good_test x80;
+volatile static const THREAD_LOCAL struct good_test x81;
+volatile const static THREAD_LOCAL struct good_test x82;
+THREAD_LOCAL const static struct good_test x83;
+const THREAD_LOCAL static struct good_test x84;
+THREAD_LOCAL volatile static struct good_test x85;
+volatile THREAD_LOCAL static struct good_test x86;
+THREAD_LOCAL const static volatile struct good_test x87;
+THREAD_LOCAL const volatile static struct good_test x88;
+const THREAD_LOCAL static volatile struct good_test x89;
+const THREAD_LOCAL volatile static struct good_test x90;
+const volatile THREAD_LOCAL static struct good_test x91;
+THREAD_LOCAL volatile static const struct good_test x92;
+THREAD_LOCAL volatile const static struct good_test x93;
+volatile THREAD_LOCAL static const struct good_test x94;
+volatile THREAD_LOCAL const static struct good_test x95;
+volatile const THREAD_LOCAL static struct good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern struct good_test2 { int x_factor2; } x21;
-extern const struct good_test3 { int x_factor3; } x22;
-extern volatile struct good_test4 { int x_factor4; } x23;
-extern const volatile struct good_test5 { int x_factor5; } x24;
-extern volatile const struct good_test6 { int x_factor6; } x25;
+extern struct good_test1 { int x_factor1; } x_1;
+extern const struct good_test2 { int x_factor2; } x_2;
+extern volatile struct good_test3 { int x_factor3; } x_3;
+extern const volatile struct good_test4 { int x_factor4; } x_4;
+extern volatile const struct good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static struct good_test7 { int x_factor7; } x26;
-static volatile struct good_test8 { int x_factor8; } x27;
-static const volatile struct good_test9 { int x_factor9; } x28;
-static volatile const struct good_test10 { int x_factor10; } x29;
+static struct good_test6 { int x_factor6; } x_6;
+static volatile struct good_test7 { int x_factor7; } x_7;
+static const volatile struct good_test8 { int x_factor8; } x_8;
+static volatile const struct good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern struct good_test11 { int x_factor11; } x30;
-volatile extern struct good_test12 { int x_factor12; } x31;
-const extern volatile struct good_test13 { int x_factor13; } x32;
-const volatile extern struct good_test14 { int x_factor14; } x33;
-volatile extern const struct good_test15 { int x_factor15; } x34;
-volatile const extern struct good_test16 { int x_factor16; } x35;
+const extern struct good_test10 { int x_factor10; } x_10;
+volatile extern struct good_test11 { int x_factor11; } x_11;
+const extern volatile struct good_test12 { int x_factor12; } x_12;
+const volatile extern struct good_test13 { int x_factor13; } x_13;
+volatile extern const struct good_test14 { int x_factor14; } x_14;
+volatile const extern struct good_test15 { int x_factor15; } x_15;
+volatile static struct good_test16 { int x_factor16; } x_16;
+const static volatile struct good_test17 { int x_factor17; } x_17;
+const volatile static struct good_test18 { int x_factor18; } x_18;
+volatile static const struct good_test19 { int x_factor19; } x_19;
+volatile const static struct good_test20 { int x_factor20; } x_20;
 
-volatile static struct good_test17 { int x_factor17; } x16;
-const static volatile struct good_test18 { int x_factor18; } x37;
-const volatile static struct good_test19 { int x_factor19; } x38;
-volatile static const struct good_test20 { int x_factor20; } x39;
-volatile const static struct good_test21 { int x_factor21; } x40;
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL struct good_test21 { int x_factor21; } x_21;
+extern THREAD_LOCAL const struct good_test22 { int x_factor22; } x_22;
+extern THREAD_LOCAL volatile struct good_test23 { int x_factor23; } x_23;
+extern THREAD_LOCAL const volatile struct good_test24 { int x_factor24; } x_24;
+extern THREAD_LOCAL volatile const struct good_test25 { int x_factor25; } x_25;
+THREAD_LOCAL extern struct good_test26 { int x_factor26; } x_26;
+THREAD_LOCAL extern const struct good_test27 { int x_factor27; } x_27;
+THREAD_LOCAL extern volatile struct good_test28 { int x_factor28; } x_28;
+THREAD_LOCAL extern const volatile struct good_test29 { int x_factor29; } x_29;
+THREAD_LOCAL extern volatile const struct good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL struct good_test31 { int x_factor31; } x_31;
+static THREAD_LOCAL const struct good_test32 { int x_factor32; } x_32;
+static THREAD_LOCAL volatile struct good_test33 { int x_factor33; } x_33;
+static THREAD_LOCAL const volatile struct good_test34 { int x_factor34; } x_34;
+static THREAD_LOCAL volatile const struct good_test35 { int x_factor35; } x_35;
+THREAD_LOCAL static struct good_test36 { int x_factor36; } x_36;
+THREAD_LOCAL static const struct good_test37 { int x_factor37; } x_37;
+THREAD_LOCAL static volatile struct good_test38 { int x_factor38; } x_38;
+THREAD_LOCAL static const volatile struct good_test39 { int x_factor39; } x_39;
+THREAD_LOCAL static volatile const struct good_test40 { int x_factor40; } x_40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL struct good_test41 { int x_factor41; } x_41;
+const extern THREAD_LOCAL struct good_test42 { int x_factor42; } x_42;
+extern volatile THREAD_LOCAL struct good_test43 { int x_factor43; } x_43;
+volatile extern THREAD_LOCAL struct good_test44 { int x_factor44; } x_44;
+extern const THREAD_LOCAL volatile struct good_test45 { int x_factor45; } x_45;
+extern const volatile THREAD_LOCAL struct good_test46 { int x_factor46; } x_46;
+const extern THREAD_LOCAL volatile struct good_test47 { int x_factor47; } x_47;
+const extern volatile THREAD_LOCAL struct good_test48 { int x_factor48; } x_48;
+const volatile extern THREAD_LOCAL struct good_test49 { int x_factor49; } x_49;
+extern volatile THREAD_LOCAL const struct good_test50 { int x_factor50; } x_50;
+extern volatile const THREAD_LOCAL struct good_test51 { int x_factor51; } x_51;
+volatile extern THREAD_LOCAL const struct good_test52 { int x_factor52; } x_52;
+volatile extern const THREAD_LOCAL struct good_test53 { int x_factor53; } x_53;
+volatile const extern THREAD_LOCAL struct good_test54 { int x_factor54; } x_54;
+THREAD_LOCAL const extern struct good_test55 { int x_factor55; } x_55;
+const THREAD_LOCAL extern struct good_test56 { int x_factor56; } x_56;
+THREAD_LOCAL volatile extern struct good_test57 { int x_factor57; } x_57;
+volatile THREAD_LOCAL extern struct good_test58 { int x_factor58; } x_58;
+THREAD_LOCAL const extern volatile struct good_test59 { int x_factor59; } x_59;
+THREAD_LOCAL const volatile extern struct good_test60 { int x_factor60; } x_60;
+const THREAD_LOCAL extern volatile struct good_test61 { int x_factor61; } x_61;
+const THREAD_LOCAL volatile extern struct good_test62 { int x_factor62; } x_62;
+const volatile THREAD_LOCAL extern struct good_test63 { int x_factor63; } x_63;
+THREAD_LOCAL volatile extern const struct good_test64 { int x_factor64; } x_64;
+THREAD_LOCAL volatile const extern struct good_test65 { int x_factor65; } x_65;
+volatile THREAD_LOCAL extern const struct good_test66 { int x_factor66; } x_66;
+volatile THREAD_LOCAL const extern struct good_test67 { int x_factor67; } x_67;
+volatile const THREAD_LOCAL extern struct good_test68 { int x_factor68; } x_68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL struct good_test69 { int x_factor69; } x_69;
+const static THREAD_LOCAL struct good_test70 { int x_factor70; } x_70;
+static volatile THREAD_LOCAL struct good_test71 { int x_factor71; } x_71;
+volatile static THREAD_LOCAL struct good_test72 { int x_factor72; } x_72;
+static const THREAD_LOCAL volatile struct good_test73 { int x_factor73; } x_73;
+static const volatile THREAD_LOCAL struct good_test74 { int x_factor74; } x_74;
+const static THREAD_LOCAL volatile struct good_test75 { int x_factor75; } x_75;
+const static volatile THREAD_LOCAL struct good_test76 { int x_factor76; } x_76;
+const volatile static THREAD_LOCAL struct good_test77 { int x_factor77; } x_77;
+static volatile THREAD_LOCAL const struct good_test78 { int x_factor78; } x_78;
+static volatile const THREAD_LOCAL struct good_test79 { int x_factor79; } x_79;
+volatile static THREAD_LOCAL const struct good_test80 { int x_factor80; } x_80;
+volatile static const THREAD_LOCAL struct good_test81 { int x_factor81; } x_81;
+volatile const static THREAD_LOCAL struct good_test82 { int x_factor82; } x_82;
+THREAD_LOCAL const static struct good_test83 { int x_factor83; } x_83;
+const THREAD_LOCAL static struct good_test84 { int x_factor84; } x_84;
+THREAD_LOCAL volatile static struct good_test85 { int x_factor85; } x_85;
+volatile THREAD_LOCAL static struct good_test86 { int x_factor86; } x_86;
+THREAD_LOCAL const static volatile struct good_test87 { int x_factor87; } x_87;
+THREAD_LOCAL const volatile static struct good_test88 { int x_factor88; } x_88;
+const THREAD_LOCAL static volatile struct good_test89 { int x_factor89; } x_89;
+const THREAD_LOCAL volatile static struct good_test90 { int x_factor90; } x_90;
+const volatile THREAD_LOCAL static struct good_test91 { int x_factor91; } x_91;
+THREAD_LOCAL volatile static const struct good_test92 { int x_factor92; } x_92;
+THREAD_LOCAL volatile const static struct good_test93 { int x_factor93; } x_93;
+volatile THREAD_LOCAL static const struct good_test94 { int x_factor94; } x_94;
+volatile THREAD_LOCAL const static struct good_test95 { int x_factor95; } x_95;
+volatile const THREAD_LOCAL static struct good_test96 { int x_factor96; } x_96;
+



From zaimoni at mail.berlios.de  Thu Mar  3 09:40:42 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Thu,  3 Mar 2011 09:40:42 +0100
Subject: [Zcplusplus-commits] r620 - in trunk: tests/zcc/decl.C99 tools
Message-ID: <20110303084042.8154B481320@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-03 09:40:42 +0100 (Thu, 03 Mar 2011)
New Revision: 620

Modified:
   trunk/tests/zcc/decl.C99/Pass_struct_def.h
   trunk/tests/zcc/decl.C99/Pass_struct_def.hpp
   trunk/tools/decl_infile.py
Log:
thread_local/_Thread_Local acceptance for structs

Modified: trunk/tests/zcc/decl.C99/Pass_struct_def.h
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_struct_def.h	2011-03-03 08:39:42 UTC (rev 619)
+++ trunk/tests/zcc/decl.C99/Pass_struct_def.h	2011-03-03 08:40:42 UTC (rev 620)
@@ -1,9 +1,9 @@
 // decl.C99\Pass_struct_def.h
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined struct
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 struct good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +27,205 @@
 const volatile extern struct good_test x13;
 volatile extern const struct good_test x14;
 volatile const extern struct good_test x15;
-
 volatile static struct good_test x16;
 const static volatile struct good_test x17;
 const volatile static struct good_test x18;
 volatile static const struct good_test x19;
 volatile const static struct good_test x20;
 
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local struct good_test x21;
+extern _Thread_Local const struct good_test x22;
+extern _Thread_Local volatile struct good_test x23;
+extern _Thread_Local const volatile struct good_test x24;
+extern _Thread_Local volatile const struct good_test x25;
+_Thread_Local extern struct good_test x26;
+_Thread_Local extern const struct good_test x27;
+_Thread_Local extern volatile struct good_test x28;
+_Thread_Local extern const volatile struct good_test x29;
+_Thread_Local extern volatile const struct good_test x30;
+
+// ringing the changes on _Thread_Local static
+static _Thread_Local struct good_test x31;
+static _Thread_Local const struct good_test x32;
+static _Thread_Local volatile struct good_test x33;
+static _Thread_Local const volatile struct good_test x34;
+static _Thread_Local volatile const struct good_test x35;
+_Thread_Local static struct good_test x36;
+_Thread_Local static const struct good_test x37;
+_Thread_Local static volatile struct good_test x38;
+_Thread_Local static const volatile struct good_test x39;
+_Thread_Local static volatile const struct good_test x40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local struct good_test x41;
+const extern _Thread_Local struct good_test x42;
+extern volatile _Thread_Local struct good_test x43;
+volatile extern _Thread_Local struct good_test x44;
+extern const _Thread_Local volatile struct good_test x45;
+extern const volatile _Thread_Local struct good_test x46;
+const extern _Thread_Local volatile struct good_test x47;
+const extern volatile _Thread_Local struct good_test x48;
+const volatile extern _Thread_Local struct good_test x49;
+extern volatile _Thread_Local const struct good_test x50;
+extern volatile const _Thread_Local struct good_test x51;
+volatile extern _Thread_Local const struct good_test x52;
+volatile extern const _Thread_Local struct good_test x53;
+volatile const extern _Thread_Local struct good_test x54;
+_Thread_Local const extern struct good_test x55;
+const _Thread_Local extern struct good_test x56;
+_Thread_Local volatile extern struct good_test x57;
+volatile _Thread_Local extern struct good_test x58;
+_Thread_Local const extern volatile struct good_test x59;
+_Thread_Local const volatile extern struct good_test x60;
+const _Thread_Local extern volatile struct good_test x61;
+const _Thread_Local volatile extern struct good_test x62;
+const volatile _Thread_Local extern struct good_test x63;
+_Thread_Local volatile extern const struct good_test x64;
+_Thread_Local volatile const extern struct good_test x65;
+volatile _Thread_Local extern const struct good_test x66;
+volatile _Thread_Local const extern struct good_test x67;
+volatile const _Thread_Local extern struct good_test x68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local struct good_test x69;
+const static _Thread_Local struct good_test x70;
+static volatile _Thread_Local struct good_test x71;
+volatile static _Thread_Local struct good_test x72;
+static const _Thread_Local volatile struct good_test x73;
+static const volatile _Thread_Local struct good_test x74;
+const static _Thread_Local volatile struct good_test x75;
+const static volatile _Thread_Local struct good_test x76;
+const volatile static _Thread_Local struct good_test x77;
+static volatile _Thread_Local const struct good_test x78;
+static volatile const _Thread_Local struct good_test x79;
+volatile static _Thread_Local const struct good_test x80;
+volatile static const _Thread_Local struct good_test x81;
+volatile const static _Thread_Local struct good_test x82;
+_Thread_Local const static struct good_test x83;
+const _Thread_Local static struct good_test x84;
+_Thread_Local volatile static struct good_test x85;
+volatile _Thread_Local static struct good_test x86;
+_Thread_Local const static volatile struct good_test x87;
+_Thread_Local const volatile static struct good_test x88;
+const _Thread_Local static volatile struct good_test x89;
+const _Thread_Local volatile static struct good_test x90;
+const volatile _Thread_Local static struct good_test x91;
+_Thread_Local volatile static const struct good_test x92;
+_Thread_Local volatile const static struct good_test x93;
+volatile _Thread_Local static const struct good_test x94;
+volatile _Thread_Local const static struct good_test x95;
+volatile const _Thread_Local static struct good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern struct good_test2 { int x_factor2; } x21;
-extern const struct good_test3 { int x_factor3; } x22;
-extern volatile struct good_test4 { int x_factor4; } x23;
-extern const volatile struct good_test5 { int x_factor5; } x24;
-extern volatile const struct good_test6 { int x_factor6; } x25;
+extern struct good_test1 { int x_factor1; } x_1;
+extern const struct good_test2 { int x_factor2; } x_2;
+extern volatile struct good_test3 { int x_factor3; } x_3;
+extern const volatile struct good_test4 { int x_factor4; } x_4;
+extern volatile const struct good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static struct good_test7 { int x_factor7; } x26;
-static volatile struct good_test8 { int x_factor8; } x27;
-static const volatile struct good_test9 { int x_factor9; } x28;
-static volatile const struct good_test10 { int x_factor10; } x29;
+static struct good_test6 { int x_factor6; } x_6;
+static volatile struct good_test7 { int x_factor7; } x_7;
+static const volatile struct good_test8 { int x_factor8; } x_8;
+static volatile const struct good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern struct good_test11 { int x_factor11; } x30;
-volatile extern struct good_test12 { int x_factor12; } x31;
-const extern volatile struct good_test13 { int x_factor13; } x32;
-const volatile extern struct good_test14 { int x_factor14; } x33;
-volatile extern const struct good_test15 { int x_factor15; } x34;
-volatile const extern struct good_test16 { int x_factor16; } x35;
+const extern struct good_test10 { int x_factor10; } x_10;
+volatile extern struct good_test11 { int x_factor11; } x_11;
+const extern volatile struct good_test12 { int x_factor12; } x_12;
+const volatile extern struct good_test13 { int x_factor13; } x_13;
+volatile extern const struct good_test14 { int x_factor14; } x_14;
+volatile const extern struct good_test15 { int x_factor15; } x_15;
+volatile static struct good_test16 { int x_factor16; } x_16;
+const static volatile struct good_test17 { int x_factor17; } x_17;
+const volatile static struct good_test18 { int x_factor18; } x_18;
+volatile static const struct good_test19 { int x_factor19; } x_19;
+volatile const static struct good_test20 { int x_factor20; } x_20;
 
-volatile static struct good_test17 { int x_factor17; } x16;
-const static volatile struct good_test18 { int x_factor18; } x37;
-const volatile static struct good_test19 { int x_factor19; } x38;
-volatile static const struct good_test20 { int x_factor20; } x39;
-volatile const static struct good_test21 { int x_factor21; } x40;
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local struct good_test21 { int x_factor21; } x_21;
+extern _Thread_Local const struct good_test22 { int x_factor22; } x_22;
+extern _Thread_Local volatile struct good_test23 { int x_factor23; } x_23;
+extern _Thread_Local const volatile struct good_test24 { int x_factor24; } x_24;
+extern _Thread_Local volatile const struct good_test25 { int x_factor25; } x_25;
+_Thread_Local extern struct good_test26 { int x_factor26; } x_26;
+_Thread_Local extern const struct good_test27 { int x_factor27; } x_27;
+_Thread_Local extern volatile struct good_test28 { int x_factor28; } x_28;
+_Thread_Local extern const volatile struct good_test29 { int x_factor29; } x_29;
+_Thread_Local extern volatile const struct good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on _Thread_Local static
+static _Thread_Local struct good_test31 { int x_factor31; } x_31;
+static _Thread_Local const struct good_test32 { int x_factor32; } x_32;
+static _Thread_Local volatile struct good_test33 { int x_factor33; } x_33;
+static _Thread_Local const volatile struct good_test34 { int x_factor34; } x_34;
+static _Thread_Local volatile const struct good_test35 { int x_factor35; } x_35;
+_Thread_Local static struct good_test36 { int x_factor36; } x_36;
+_Thread_Local static const struct good_test37 { int x_factor37; } x_37;
+_Thread_Local static volatile struct good_test38 { int x_factor38; } x_38;
+_Thread_Local static const volatile struct good_test39 { int x_factor39; } x_39;
+_Thread_Local static volatile const struct good_test40 { int x_factor40; } x_40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local struct good_test41 { int x_factor41; } x_41;
+const extern _Thread_Local struct good_test42 { int x_factor42; } x_42;
+extern volatile _Thread_Local struct good_test43 { int x_factor43; } x_43;
+volatile extern _Thread_Local struct good_test44 { int x_factor44; } x_44;
+extern const _Thread_Local volatile struct good_test45 { int x_factor45; } x_45;
+extern const volatile _Thread_Local struct good_test46 { int x_factor46; } x_46;
+const extern _Thread_Local volatile struct good_test47 { int x_factor47; } x_47;
+const extern volatile _Thread_Local struct good_test48 { int x_factor48; } x_48;
+const volatile extern _Thread_Local struct good_test49 { int x_factor49; } x_49;
+extern volatile _Thread_Local const struct good_test50 { int x_factor50; } x_50;
+extern volatile const _Thread_Local struct good_test51 { int x_factor51; } x_51;
+volatile extern _Thread_Local const struct good_test52 { int x_factor52; } x_52;
+volatile extern const _Thread_Local struct good_test53 { int x_factor53; } x_53;
+volatile const extern _Thread_Local struct good_test54 { int x_factor54; } x_54;
+_Thread_Local const extern struct good_test55 { int x_factor55; } x_55;
+const _Thread_Local extern struct good_test56 { int x_factor56; } x_56;
+_Thread_Local volatile extern struct good_test57 { int x_factor57; } x_57;
+volatile _Thread_Local extern struct good_test58 { int x_factor58; } x_58;
+_Thread_Local const extern volatile struct good_test59 { int x_factor59; } x_59;
+_Thread_Local const volatile extern struct good_test60 { int x_factor60; } x_60;
+const _Thread_Local extern volatile struct good_test61 { int x_factor61; } x_61;
+const _Thread_Local volatile extern struct good_test62 { int x_factor62; } x_62;
+const volatile _Thread_Local extern struct good_test63 { int x_factor63; } x_63;
+_Thread_Local volatile extern const struct good_test64 { int x_factor64; } x_64;
+_Thread_Local volatile const extern struct good_test65 { int x_factor65; } x_65;
+volatile _Thread_Local extern const struct good_test66 { int x_factor66; } x_66;
+volatile _Thread_Local const extern struct good_test67 { int x_factor67; } x_67;
+volatile const _Thread_Local extern struct good_test68 { int x_factor68; } x_68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local struct good_test69 { int x_factor69; } x_69;
+const static _Thread_Local struct good_test70 { int x_factor70; } x_70;
+static volatile _Thread_Local struct good_test71 { int x_factor71; } x_71;
+volatile static _Thread_Local struct good_test72 { int x_factor72; } x_72;
+static const _Thread_Local volatile struct good_test73 { int x_factor73; } x_73;
+static const volatile _Thread_Local struct good_test74 { int x_factor74; } x_74;
+const static _Thread_Local volatile struct good_test75 { int x_factor75; } x_75;
+const static volatile _Thread_Local struct good_test76 { int x_factor76; } x_76;
+const volatile static _Thread_Local struct good_test77 { int x_factor77; } x_77;
+static volatile _Thread_Local const struct good_test78 { int x_factor78; } x_78;
+static volatile const _Thread_Local struct good_test79 { int x_factor79; } x_79;
+volatile static _Thread_Local const struct good_test80 { int x_factor80; } x_80;
+volatile static const _Thread_Local struct good_test81 { int x_factor81; } x_81;
+volatile const static _Thread_Local struct good_test82 { int x_factor82; } x_82;
+_Thread_Local const static struct good_test83 { int x_factor83; } x_83;
+const _Thread_Local static struct good_test84 { int x_factor84; } x_84;
+_Thread_Local volatile static struct good_test85 { int x_factor85; } x_85;
+volatile _Thread_Local static struct good_test86 { int x_factor86; } x_86;
+_Thread_Local const static volatile struct good_test87 { int x_factor87; } x_87;
+_Thread_Local const volatile static struct good_test88 { int x_factor88; } x_88;
+const _Thread_Local static volatile struct good_test89 { int x_factor89; } x_89;
+const _Thread_Local volatile static struct good_test90 { int x_factor90; } x_90;
+const volatile _Thread_Local static struct good_test91 { int x_factor91; } x_91;
+_Thread_Local volatile static const struct good_test92 { int x_factor92; } x_92;
+_Thread_Local volatile const static struct good_test93 { int x_factor93; } x_93;
+volatile _Thread_Local static const struct good_test94 { int x_factor94; } x_94;
+volatile _Thread_Local const static struct good_test95 { int x_factor95; } x_95;
+volatile const _Thread_Local static struct good_test96 { int x_factor96; } x_96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_struct_def.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_struct_def.hpp	2011-03-03 08:39:42 UTC (rev 619)
+++ trunk/tests/zcc/decl.C99/Pass_struct_def.hpp	2011-03-03 08:40:42 UTC (rev 620)
@@ -1,9 +1,9 @@
 // decl.C99\Pass_struct_def.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined struct
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 struct good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +27,205 @@
 const volatile extern struct good_test x13;
 volatile extern const struct good_test x14;
 volatile const extern struct good_test x15;
-
 volatile static struct good_test x16;
 const static volatile struct good_test x17;
 const volatile static struct good_test x18;
 volatile static const struct good_test x19;
 volatile const static struct good_test x20;
 
+// ringing the changes on thread_local extern
+extern thread_local struct good_test x21;
+extern thread_local const struct good_test x22;
+extern thread_local volatile struct good_test x23;
+extern thread_local const volatile struct good_test x24;
+extern thread_local volatile const struct good_test x25;
+thread_local extern struct good_test x26;
+thread_local extern const struct good_test x27;
+thread_local extern volatile struct good_test x28;
+thread_local extern const volatile struct good_test x29;
+thread_local extern volatile const struct good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local struct good_test x31;
+static thread_local const struct good_test x32;
+static thread_local volatile struct good_test x33;
+static thread_local const volatile struct good_test x34;
+static thread_local volatile const struct good_test x35;
+thread_local static struct good_test x36;
+thread_local static const struct good_test x37;
+thread_local static volatile struct good_test x38;
+thread_local static const volatile struct good_test x39;
+thread_local static volatile const struct good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local struct good_test x41;
+const extern thread_local struct good_test x42;
+extern volatile thread_local struct good_test x43;
+volatile extern thread_local struct good_test x44;
+extern const thread_local volatile struct good_test x45;
+extern const volatile thread_local struct good_test x46;
+const extern thread_local volatile struct good_test x47;
+const extern volatile thread_local struct good_test x48;
+const volatile extern thread_local struct good_test x49;
+extern volatile thread_local const struct good_test x50;
+extern volatile const thread_local struct good_test x51;
+volatile extern thread_local const struct good_test x52;
+volatile extern const thread_local struct good_test x53;
+volatile const extern thread_local struct good_test x54;
+thread_local const extern struct good_test x55;
+const thread_local extern struct good_test x56;
+thread_local volatile extern struct good_test x57;
+volatile thread_local extern struct good_test x58;
+thread_local const extern volatile struct good_test x59;
+thread_local const volatile extern struct good_test x60;
+const thread_local extern volatile struct good_test x61;
+const thread_local volatile extern struct good_test x62;
+const volatile thread_local extern struct good_test x63;
+thread_local volatile extern const struct good_test x64;
+thread_local volatile const extern struct good_test x65;
+volatile thread_local extern const struct good_test x66;
+volatile thread_local const extern struct good_test x67;
+volatile const thread_local extern struct good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local struct good_test x69;
+const static thread_local struct good_test x70;
+static volatile thread_local struct good_test x71;
+volatile static thread_local struct good_test x72;
+static const thread_local volatile struct good_test x73;
+static const volatile thread_local struct good_test x74;
+const static thread_local volatile struct good_test x75;
+const static volatile thread_local struct good_test x76;
+const volatile static thread_local struct good_test x77;
+static volatile thread_local const struct good_test x78;
+static volatile const thread_local struct good_test x79;
+volatile static thread_local const struct good_test x80;
+volatile static const thread_local struct good_test x81;
+volatile const static thread_local struct good_test x82;
+thread_local const static struct good_test x83;
+const thread_local static struct good_test x84;
+thread_local volatile static struct good_test x85;
+volatile thread_local static struct good_test x86;
+thread_local const static volatile struct good_test x87;
+thread_local const volatile static struct good_test x88;
+const thread_local static volatile struct good_test x89;
+const thread_local volatile static struct good_test x90;
+const volatile thread_local static struct good_test x91;
+thread_local volatile static const struct good_test x92;
+thread_local volatile const static struct good_test x93;
+volatile thread_local static const struct good_test x94;
+volatile thread_local const static struct good_test x95;
+volatile const thread_local static struct good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern struct good_test2 { int x_factor2; } x21;
-extern const struct good_test3 { int x_factor3; } x22;
-extern volatile struct good_test4 { int x_factor4; } x23;
-extern const volatile struct good_test5 { int x_factor5; } x24;
-extern volatile const struct good_test6 { int x_factor6; } x25;
+extern struct good_test1 { int x_factor1; } x_1;
+extern const struct good_test2 { int x_factor2; } x_2;
+extern volatile struct good_test3 { int x_factor3; } x_3;
+extern const volatile struct good_test4 { int x_factor4; } x_4;
+extern volatile const struct good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static struct good_test7 { int x_factor7; } x26;
-static volatile struct good_test8 { int x_factor8; } x27;
-static const volatile struct good_test9 { int x_factor9; } x28;
-static volatile const struct good_test10 { int x_factor10; } x29;
+static struct good_test6 { int x_factor6; } x_6;
+static volatile struct good_test7 { int x_factor7; } x_7;
+static const volatile struct good_test8 { int x_factor8; } x_8;
+static volatile const struct good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern struct good_test11 { int x_factor11; } x30;
-volatile extern struct good_test12 { int x_factor12; } x31;
-const extern volatile struct good_test13 { int x_factor13; } x32;
-const volatile extern struct good_test14 { int x_factor14; } x33;
-volatile extern const struct good_test15 { int x_factor15; } x34;
-volatile const extern struct good_test16 { int x_factor16; } x35;
+const extern struct good_test10 { int x_factor10; } x_10;
+volatile extern struct good_test11 { int x_factor11; } x_11;
+const extern volatile struct good_test12 { int x_factor12; } x_12;
+const volatile extern struct good_test13 { int x_factor13; } x_13;
+volatile extern const struct good_test14 { int x_factor14; } x_14;
+volatile const extern struct good_test15 { int x_factor15; } x_15;
+volatile static struct good_test16 { int x_factor16; } x_16;
+const static volatile struct good_test17 { int x_factor17; } x_17;
+const volatile static struct good_test18 { int x_factor18; } x_18;
+volatile static const struct good_test19 { int x_factor19; } x_19;
+volatile const static struct good_test20 { int x_factor20; } x_20;
 
-volatile static struct good_test17 { int x_factor17; } x16;
-const static volatile struct good_test18 { int x_factor18; } x37;
-const volatile static struct good_test19 { int x_factor19; } x38;
-volatile static const struct good_test20 { int x_factor20; } x39;
-volatile const static struct good_test21 { int x_factor21; } x40;
+// ringing the changes on thread_local extern
+extern thread_local struct good_test21 { int x_factor21; } x_21;
+extern thread_local const struct good_test22 { int x_factor22; } x_22;
+extern thread_local volatile struct good_test23 { int x_factor23; } x_23;
+extern thread_local const volatile struct good_test24 { int x_factor24; } x_24;
+extern thread_local volatile const struct good_test25 { int x_factor25; } x_25;
+thread_local extern struct good_test26 { int x_factor26; } x_26;
+thread_local extern const struct good_test27 { int x_factor27; } x_27;
+thread_local extern volatile struct good_test28 { int x_factor28; } x_28;
+thread_local extern const volatile struct good_test29 { int x_factor29; } x_29;
+thread_local extern volatile const struct good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on thread_local static
+static thread_local struct good_test31 { int x_factor31; } x_31;
+static thread_local const struct good_test32 { int x_factor32; } x_32;
+static thread_local volatile struct good_test33 { int x_factor33; } x_33;
+static thread_local const volatile struct good_test34 { int x_factor34; } x_34;
+static thread_local volatile const struct good_test35 { int x_factor35; } x_35;
+thread_local static struct good_test36 { int x_factor36; } x_36;
+thread_local static const struct good_test37 { int x_factor37; } x_37;
+thread_local static volatile struct good_test38 { int x_factor38; } x_38;
+thread_local static const volatile struct good_test39 { int x_factor39; } x_39;
+thread_local static volatile const struct good_test40 { int x_factor40; } x_40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local struct good_test41 { int x_factor41; } x_41;
+const extern thread_local struct good_test42 { int x_factor42; } x_42;
+extern volatile thread_local struct good_test43 { int x_factor43; } x_43;
+volatile extern thread_local struct good_test44 { int x_factor44; } x_44;
+extern const thread_local volatile struct good_test45 { int x_factor45; } x_45;
+extern const volatile thread_local struct good_test46 { int x_factor46; } x_46;
+const extern thread_local volatile struct good_test47 { int x_factor47; } x_47;
+const extern volatile thread_local struct good_test48 { int x_factor48; } x_48;
+const volatile extern thread_local struct good_test49 { int x_factor49; } x_49;
+extern volatile thread_local const struct good_test50 { int x_factor50; } x_50;
+extern volatile const thread_local struct good_test51 { int x_factor51; } x_51;
+volatile extern thread_local const struct good_test52 { int x_factor52; } x_52;
+volatile extern const thread_local struct good_test53 { int x_factor53; } x_53;
+volatile const extern thread_local struct good_test54 { int x_factor54; } x_54;
+thread_local const extern struct good_test55 { int x_factor55; } x_55;
+const thread_local extern struct good_test56 { int x_factor56; } x_56;
+thread_local volatile extern struct good_test57 { int x_factor57; } x_57;
+volatile thread_local extern struct good_test58 { int x_factor58; } x_58;
+thread_local const extern volatile struct good_test59 { int x_factor59; } x_59;
+thread_local const volatile extern struct good_test60 { int x_factor60; } x_60;
+const thread_local extern volatile struct good_test61 { int x_factor61; } x_61;
+const thread_local volatile extern struct good_test62 { int x_factor62; } x_62;
+const volatile thread_local extern struct good_test63 { int x_factor63; } x_63;
+thread_local volatile extern const struct good_test64 { int x_factor64; } x_64;
+thread_local volatile const extern struct good_test65 { int x_factor65; } x_65;
+volatile thread_local extern const struct good_test66 { int x_factor66; } x_66;
+volatile thread_local const extern struct good_test67 { int x_factor67; } x_67;
+volatile const thread_local extern struct good_test68 { int x_factor68; } x_68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local struct good_test69 { int x_factor69; } x_69;
+const static thread_local struct good_test70 { int x_factor70; } x_70;
+static volatile thread_local struct good_test71 { int x_factor71; } x_71;
+volatile static thread_local struct good_test72 { int x_factor72; } x_72;
+static const thread_local volatile struct good_test73 { int x_factor73; } x_73;
+static const volatile thread_local struct good_test74 { int x_factor74; } x_74;
+const static thread_local volatile struct good_test75 { int x_factor75; } x_75;
+const static volatile thread_local struct good_test76 { int x_factor76; } x_76;
+const volatile static thread_local struct good_test77 { int x_factor77; } x_77;
+static volatile thread_local const struct good_test78 { int x_factor78; } x_78;
+static volatile const thread_local struct good_test79 { int x_factor79; } x_79;
+volatile static thread_local const struct good_test80 { int x_factor80; } x_80;
+volatile static const thread_local struct good_test81 { int x_factor81; } x_81;
+volatile const static thread_local struct good_test82 { int x_factor82; } x_82;
+thread_local const static struct good_test83 { int x_factor83; } x_83;
+const thread_local static struct good_test84 { int x_factor84; } x_84;
+thread_local volatile static struct good_test85 { int x_factor85; } x_85;
+volatile thread_local static struct good_test86 { int x_factor86; } x_86;
+thread_local const static volatile struct good_test87 { int x_factor87; } x_87;
+thread_local const volatile static struct good_test88 { int x_factor88; } x_88;
+const thread_local static volatile struct good_test89 { int x_factor89; } x_89;
+const thread_local volatile static struct good_test90 { int x_factor90; } x_90;
+const volatile thread_local static struct good_test91 { int x_factor91; } x_91;
+thread_local volatile static const struct good_test92 { int x_factor92; } x_92;
+thread_local volatile const static struct good_test93 { int x_factor93; } x_93;
+volatile thread_local static const struct good_test94 { int x_factor94; } x_94;
+volatile thread_local const static struct good_test95 { int x_factor95; } x_95;
+volatile const thread_local static struct good_test96 { int x_factor96; } x_96;
+

Modified: trunk/tools/decl_infile.py
===================================================================
--- trunk/tools/decl_infile.py	2011-03-03 08:39:42 UTC (rev 619)
+++ trunk/tools/decl_infile.py	2011-03-03 08:40:42 UTC (rev 620)
@@ -5,7 +5,7 @@
 # (C)2011 Kenneth Boyd, license: MIT.txt
 
 # target files
-target_files = ['Pass_enum_def.in']
+target_files = ['Pass_enum_def.in', 'Pass_struct_def.in']
 
 invariant_header_lines = [
 'SUFFIXES h hpp\n'
@@ -13,9 +13,11 @@
 '// (C)2009,2011 Kenneth Boyd, license: MIT.txt\n'
 ]
 
-context = {'Pass_enum_def.in':'// using singly defined enum\n'}
+context = {	'Pass_enum_def.in':'// using singly defined enum\n',
+			'Pass_struct_def.in':'// using singly defined struct\n'}
 
-global_define = {'Pass_enum_def.in':'\nenum good_test {\n\tx_factor = 1\n};\n\n'}
+global_define = {	'Pass_enum_def.in':'\nenum good_test {\n\tx_factor = 1\n};\n\n',
+					'Pass_struct_def.in':'\nstruct good_test {\n\tint x_factor\n};\n\n'}
 
 section_comments = ['// ringing the changes on extern\n',
 "// ringing the changes on static\n// (don't test static const -- no chance to initialize before use)\n",
@@ -27,14 +29,20 @@
 
 def enum_decl(i):
 	return "enum good_test x"+i
-	
-var_decl = {'Pass_enum_def.in':enum_decl}
 
+def struct_decl(i):
+	return "struct good_test x"+i
+
+var_decl = {'Pass_enum_def.in':enum_decl, 'Pass_struct_def.in':struct_decl}
+
 def enum_def(i):
 	return 'enum good_test'+i+' { x_factor'+i+' = 1 } x_'+i
-	
-var_def = {'Pass_enum_def.in':enum_def}
 
+def struct_def(i):
+	return 'struct good_test'+i+' { int x_factor'+i+'; } x_'+i
+
+var_def = {'Pass_enum_def.in':enum_def, 'Pass_struct_def.in':struct_def}
+
 test_qualifiers = [
 'extern',
 'extern const',



From zaimoni at mail.berlios.de  Fri Mar  4 09:30:59 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Fri,  4 Mar 2011 09:30:59 +0100
Subject: [Zcplusplus-commits] r621 - trunk/tests/zcc.in/decl.C99
Message-ID: <20110304083059.3EBF9481413@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-04 09:30:58 +0100 (Fri, 04 Mar 2011)
New Revision: 621

Modified:
   trunk/tests/zcc.in/decl.C99/Pass_union_def.in
Log:
adjust Pass_union_def.in

Modified: trunk/tests/zcc.in/decl.C99/Pass_union_def.in
===================================================================
--- trunk/tests/zcc.in/decl.C99/Pass_union_def.in	2011-03-03 08:40:42 UTC (rev 620)
+++ trunk/tests/zcc.in/decl.C99/Pass_union_def.in	2011-03-04 08:30:58 UTC (rev 621)
@@ -1,9 +1,10 @@
 SUFFIXES h hpp
+OBJECTLIKE_MACRO THREAD_LOCAL _Thread_Local thread_local
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined union
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 union good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +28,205 @@
 const volatile extern union good_test x13;
 volatile extern const union good_test x14;
 volatile const extern union good_test x15;
-
 volatile static union good_test x16;
 const static volatile union good_test x17;
 const volatile static union good_test x18;
 volatile static const union good_test x19;
 volatile const static union good_test x20;
 
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL union good_test x21;
+extern THREAD_LOCAL const union good_test x22;
+extern THREAD_LOCAL volatile union good_test x23;
+extern THREAD_LOCAL const volatile union good_test x24;
+extern THREAD_LOCAL volatile const union good_test x25;
+THREAD_LOCAL extern union good_test x26;
+THREAD_LOCAL extern const union good_test x27;
+THREAD_LOCAL extern volatile union good_test x28;
+THREAD_LOCAL extern const volatile union good_test x29;
+THREAD_LOCAL extern volatile const union good_test x30;
+
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL union good_test x31;
+static THREAD_LOCAL const union good_test x32;
+static THREAD_LOCAL volatile union good_test x33;
+static THREAD_LOCAL const volatile union good_test x34;
+static THREAD_LOCAL volatile const union good_test x35;
+THREAD_LOCAL static union good_test x36;
+THREAD_LOCAL static const union good_test x37;
+THREAD_LOCAL static volatile union good_test x38;
+THREAD_LOCAL static const volatile union good_test x39;
+THREAD_LOCAL static volatile const union good_test x40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL union good_test x41;
+const extern THREAD_LOCAL union good_test x42;
+extern volatile THREAD_LOCAL union good_test x43;
+volatile extern THREAD_LOCAL union good_test x44;
+extern const THREAD_LOCAL volatile union good_test x45;
+extern const volatile THREAD_LOCAL union good_test x46;
+const extern THREAD_LOCAL volatile union good_test x47;
+const extern volatile THREAD_LOCAL union good_test x48;
+const volatile extern THREAD_LOCAL union good_test x49;
+extern volatile THREAD_LOCAL const union good_test x50;
+extern volatile const THREAD_LOCAL union good_test x51;
+volatile extern THREAD_LOCAL const union good_test x52;
+volatile extern const THREAD_LOCAL union good_test x53;
+volatile const extern THREAD_LOCAL union good_test x54;
+THREAD_LOCAL const extern union good_test x55;
+const THREAD_LOCAL extern union good_test x56;
+THREAD_LOCAL volatile extern union good_test x57;
+volatile THREAD_LOCAL extern union good_test x58;
+THREAD_LOCAL const extern volatile union good_test x59;
+THREAD_LOCAL const volatile extern union good_test x60;
+const THREAD_LOCAL extern volatile union good_test x61;
+const THREAD_LOCAL volatile extern union good_test x62;
+const volatile THREAD_LOCAL extern union good_test x63;
+THREAD_LOCAL volatile extern const union good_test x64;
+THREAD_LOCAL volatile const extern union good_test x65;
+volatile THREAD_LOCAL extern const union good_test x66;
+volatile THREAD_LOCAL const extern union good_test x67;
+volatile const THREAD_LOCAL extern union good_test x68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL union good_test x69;
+const static THREAD_LOCAL union good_test x70;
+static volatile THREAD_LOCAL union good_test x71;
+volatile static THREAD_LOCAL union good_test x72;
+static const THREAD_LOCAL volatile union good_test x73;
+static const volatile THREAD_LOCAL union good_test x74;
+const static THREAD_LOCAL volatile union good_test x75;
+const static volatile THREAD_LOCAL union good_test x76;
+const volatile static THREAD_LOCAL union good_test x77;
+static volatile THREAD_LOCAL const union good_test x78;
+static volatile const THREAD_LOCAL union good_test x79;
+volatile static THREAD_LOCAL const union good_test x80;
+volatile static const THREAD_LOCAL union good_test x81;
+volatile const static THREAD_LOCAL union good_test x82;
+THREAD_LOCAL const static union good_test x83;
+const THREAD_LOCAL static union good_test x84;
+THREAD_LOCAL volatile static union good_test x85;
+volatile THREAD_LOCAL static union good_test x86;
+THREAD_LOCAL const static volatile union good_test x87;
+THREAD_LOCAL const volatile static union good_test x88;
+const THREAD_LOCAL static volatile union good_test x89;
+const THREAD_LOCAL volatile static union good_test x90;
+const volatile THREAD_LOCAL static union good_test x91;
+THREAD_LOCAL volatile static const union good_test x92;
+THREAD_LOCAL volatile const static union good_test x93;
+volatile THREAD_LOCAL static const union good_test x94;
+volatile THREAD_LOCAL const static union good_test x95;
+volatile const THREAD_LOCAL static union good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern union good_test2 { int x_factor2; } x21;
-extern const union good_test3 { int x_factor3; } x22;
-extern volatile union good_test4 { int x_factor4; } x23;
-extern const volatile union good_test5 { int x_factor5; } x24;
-extern volatile const union good_test6 { int x_factor6; } x25;
+extern union good_test1 { int x_factor1; } x_1;
+extern const union good_test2 { int x_factor2; } x_2;
+extern volatile union good_test3 { int x_factor3; } x_3;
+extern const volatile union good_test4 { int x_factor4; } x_4;
+extern volatile const union good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static union good_test7 { int x_factor7; } x26;
-static volatile union good_test8 { int x_factor8; } x27;
-static const volatile union good_test9 { int x_factor9; } x28;
-static volatile const union good_test10 { int x_factor10; } x29;
+static union good_test6 { int x_factor6; } x_6;
+static volatile union good_test7 { int x_factor7; } x_7;
+static const volatile union good_test8 { int x_factor8; } x_8;
+static volatile const union good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern union good_test11 { int x_factor11; } x30;
-volatile extern union good_test12 { int x_factor12; } x31;
-const extern volatile union good_test13 { int x_factor13; } x32;
-const volatile extern union good_test14 { int x_factor14; } x33;
-volatile extern const union good_test15 { int x_factor15; } x34;
-volatile const extern union good_test16 { int x_factor16; } x35;
+const extern union good_test10 { int x_factor10; } x_10;
+volatile extern union good_test11 { int x_factor11; } x_11;
+const extern volatile union good_test12 { int x_factor12; } x_12;
+const volatile extern union good_test13 { int x_factor13; } x_13;
+volatile extern const union good_test14 { int x_factor14; } x_14;
+volatile const extern union good_test15 { int x_factor15; } x_15;
+volatile static union good_test16 { int x_factor16; } x_16;
+const static volatile union good_test17 { int x_factor17; } x_17;
+const volatile static union good_test18 { int x_factor18; } x_18;
+volatile static const union good_test19 { int x_factor19; } x_19;
+volatile const static union good_test20 { int x_factor20; } x_20;
 
-volatile static union good_test17 { int x_factor17; } x16;
-const static volatile union good_test18 { int x_factor18; } x37;
-const volatile static union good_test19 { int x_factor19; } x38;
-volatile static const union good_test20 { int x_factor20; } x39;
-volatile const static union good_test21 { int x_factor21; } x40;
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL union good_test21 { int x_factor21; } x_21;
+extern THREAD_LOCAL const union good_test22 { int x_factor22; } x_22;
+extern THREAD_LOCAL volatile union good_test23 { int x_factor23; } x_23;
+extern THREAD_LOCAL const volatile union good_test24 { int x_factor24; } x_24;
+extern THREAD_LOCAL volatile const union good_test25 { int x_factor25; } x_25;
+THREAD_LOCAL extern union good_test26 { int x_factor26; } x_26;
+THREAD_LOCAL extern const union good_test27 { int x_factor27; } x_27;
+THREAD_LOCAL extern volatile union good_test28 { int x_factor28; } x_28;
+THREAD_LOCAL extern const volatile union good_test29 { int x_factor29; } x_29;
+THREAD_LOCAL extern volatile const union good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL union good_test31 { int x_factor31; } x_31;
+static THREAD_LOCAL const union good_test32 { int x_factor32; } x_32;
+static THREAD_LOCAL volatile union good_test33 { int x_factor33; } x_33;
+static THREAD_LOCAL const volatile union good_test34 { int x_factor34; } x_34;
+static THREAD_LOCAL volatile const union good_test35 { int x_factor35; } x_35;
+THREAD_LOCAL static union good_test36 { int x_factor36; } x_36;
+THREAD_LOCAL static const union good_test37 { int x_factor37; } x_37;
+THREAD_LOCAL static volatile union good_test38 { int x_factor38; } x_38;
+THREAD_LOCAL static const volatile union good_test39 { int x_factor39; } x_39;
+THREAD_LOCAL static volatile const union good_test40 { int x_factor40; } x_40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL union good_test41 { int x_factor41; } x_41;
+const extern THREAD_LOCAL union good_test42 { int x_factor42; } x_42;
+extern volatile THREAD_LOCAL union good_test43 { int x_factor43; } x_43;
+volatile extern THREAD_LOCAL union good_test44 { int x_factor44; } x_44;
+extern const THREAD_LOCAL volatile union good_test45 { int x_factor45; } x_45;
+extern const volatile THREAD_LOCAL union good_test46 { int x_factor46; } x_46;
+const extern THREAD_LOCAL volatile union good_test47 { int x_factor47; } x_47;
+const extern volatile THREAD_LOCAL union good_test48 { int x_factor48; } x_48;
+const volatile extern THREAD_LOCAL union good_test49 { int x_factor49; } x_49;
+extern volatile THREAD_LOCAL const union good_test50 { int x_factor50; } x_50;
+extern volatile const THREAD_LOCAL union good_test51 { int x_factor51; } x_51;
+volatile extern THREAD_LOCAL const union good_test52 { int x_factor52; } x_52;
+volatile extern const THREAD_LOCAL union good_test53 { int x_factor53; } x_53;
+volatile const extern THREAD_LOCAL union good_test54 { int x_factor54; } x_54;
+THREAD_LOCAL const extern union good_test55 { int x_factor55; } x_55;
+const THREAD_LOCAL extern union good_test56 { int x_factor56; } x_56;
+THREAD_LOCAL volatile extern union good_test57 { int x_factor57; } x_57;
+volatile THREAD_LOCAL extern union good_test58 { int x_factor58; } x_58;
+THREAD_LOCAL const extern volatile union good_test59 { int x_factor59; } x_59;
+THREAD_LOCAL const volatile extern union good_test60 { int x_factor60; } x_60;
+const THREAD_LOCAL extern volatile union good_test61 { int x_factor61; } x_61;
+const THREAD_LOCAL volatile extern union good_test62 { int x_factor62; } x_62;
+const volatile THREAD_LOCAL extern union good_test63 { int x_factor63; } x_63;
+THREAD_LOCAL volatile extern const union good_test64 { int x_factor64; } x_64;
+THREAD_LOCAL volatile const extern union good_test65 { int x_factor65; } x_65;
+volatile THREAD_LOCAL extern const union good_test66 { int x_factor66; } x_66;
+volatile THREAD_LOCAL const extern union good_test67 { int x_factor67; } x_67;
+volatile const THREAD_LOCAL extern union good_test68 { int x_factor68; } x_68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL union good_test69 { int x_factor69; } x_69;
+const static THREAD_LOCAL union good_test70 { int x_factor70; } x_70;
+static volatile THREAD_LOCAL union good_test71 { int x_factor71; } x_71;
+volatile static THREAD_LOCAL union good_test72 { int x_factor72; } x_72;
+static const THREAD_LOCAL volatile union good_test73 { int x_factor73; } x_73;
+static const volatile THREAD_LOCAL union good_test74 { int x_factor74; } x_74;
+const static THREAD_LOCAL volatile union good_test75 { int x_factor75; } x_75;
+const static volatile THREAD_LOCAL union good_test76 { int x_factor76; } x_76;
+const volatile static THREAD_LOCAL union good_test77 { int x_factor77; } x_77;
+static volatile THREAD_LOCAL const union good_test78 { int x_factor78; } x_78;
+static volatile const THREAD_LOCAL union good_test79 { int x_factor79; } x_79;
+volatile static THREAD_LOCAL const union good_test80 { int x_factor80; } x_80;
+volatile static const THREAD_LOCAL union good_test81 { int x_factor81; } x_81;
+volatile const static THREAD_LOCAL union good_test82 { int x_factor82; } x_82;
+THREAD_LOCAL const static union good_test83 { int x_factor83; } x_83;
+const THREAD_LOCAL static union good_test84 { int x_factor84; } x_84;
+THREAD_LOCAL volatile static union good_test85 { int x_factor85; } x_85;
+volatile THREAD_LOCAL static union good_test86 { int x_factor86; } x_86;
+THREAD_LOCAL const static volatile union good_test87 { int x_factor87; } x_87;
+THREAD_LOCAL const volatile static union good_test88 { int x_factor88; } x_88;
+const THREAD_LOCAL static volatile union good_test89 { int x_factor89; } x_89;
+const THREAD_LOCAL volatile static union good_test90 { int x_factor90; } x_90;
+const volatile THREAD_LOCAL static union good_test91 { int x_factor91; } x_91;
+THREAD_LOCAL volatile static const union good_test92 { int x_factor92; } x_92;
+THREAD_LOCAL volatile const static union good_test93 { int x_factor93; } x_93;
+volatile THREAD_LOCAL static const union good_test94 { int x_factor94; } x_94;
+volatile THREAD_LOCAL const static union good_test95 { int x_factor95; } x_95;
+volatile const THREAD_LOCAL static union good_test96 { int x_factor96; } x_96;
+



From zaimoni at mail.berlios.de  Fri Mar  4 09:32:02 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Fri,  4 Mar 2011 09:32:02 +0100
Subject: [Zcplusplus-commits] r622 - in trunk: tests/zcc/decl.C99 tools
Message-ID: <20110304083202.18E94481413@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-04 09:32:01 +0100 (Fri, 04 Mar 2011)
New Revision: 622

Modified:
   trunk/tests/zcc/decl.C99/Pass_union_def.h
   trunk/tests/zcc/decl.C99/Pass_union_def.hpp
   trunk/tools/decl_infile.py
Log:
union declaration/definition testing for _Thread_Local/thread_local

Modified: trunk/tests/zcc/decl.C99/Pass_union_def.h
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_union_def.h	2011-03-04 08:30:58 UTC (rev 621)
+++ trunk/tests/zcc/decl.C99/Pass_union_def.h	2011-03-04 08:32:01 UTC (rev 622)
@@ -1,9 +1,9 @@
 // decl.C99\Pass_union_def.h
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined union
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 union good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +27,205 @@
 const volatile extern union good_test x13;
 volatile extern const union good_test x14;
 volatile const extern union good_test x15;
-
 volatile static union good_test x16;
 const static volatile union good_test x17;
 const volatile static union good_test x18;
 volatile static const union good_test x19;
 volatile const static union good_test x20;
 
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local union good_test x21;
+extern _Thread_Local const union good_test x22;
+extern _Thread_Local volatile union good_test x23;
+extern _Thread_Local const volatile union good_test x24;
+extern _Thread_Local volatile const union good_test x25;
+_Thread_Local extern union good_test x26;
+_Thread_Local extern const union good_test x27;
+_Thread_Local extern volatile union good_test x28;
+_Thread_Local extern const volatile union good_test x29;
+_Thread_Local extern volatile const union good_test x30;
+
+// ringing the changes on _Thread_Local static
+static _Thread_Local union good_test x31;
+static _Thread_Local const union good_test x32;
+static _Thread_Local volatile union good_test x33;
+static _Thread_Local const volatile union good_test x34;
+static _Thread_Local volatile const union good_test x35;
+_Thread_Local static union good_test x36;
+_Thread_Local static const union good_test x37;
+_Thread_Local static volatile union good_test x38;
+_Thread_Local static const volatile union good_test x39;
+_Thread_Local static volatile const union good_test x40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local union good_test x41;
+const extern _Thread_Local union good_test x42;
+extern volatile _Thread_Local union good_test x43;
+volatile extern _Thread_Local union good_test x44;
+extern const _Thread_Local volatile union good_test x45;
+extern const volatile _Thread_Local union good_test x46;
+const extern _Thread_Local volatile union good_test x47;
+const extern volatile _Thread_Local union good_test x48;
+const volatile extern _Thread_Local union good_test x49;
+extern volatile _Thread_Local const union good_test x50;
+extern volatile const _Thread_Local union good_test x51;
+volatile extern _Thread_Local const union good_test x52;
+volatile extern const _Thread_Local union good_test x53;
+volatile const extern _Thread_Local union good_test x54;
+_Thread_Local const extern union good_test x55;
+const _Thread_Local extern union good_test x56;
+_Thread_Local volatile extern union good_test x57;
+volatile _Thread_Local extern union good_test x58;
+_Thread_Local const extern volatile union good_test x59;
+_Thread_Local const volatile extern union good_test x60;
+const _Thread_Local extern volatile union good_test x61;
+const _Thread_Local volatile extern union good_test x62;
+const volatile _Thread_Local extern union good_test x63;
+_Thread_Local volatile extern const union good_test x64;
+_Thread_Local volatile const extern union good_test x65;
+volatile _Thread_Local extern const union good_test x66;
+volatile _Thread_Local const extern union good_test x67;
+volatile const _Thread_Local extern union good_test x68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local union good_test x69;
+const static _Thread_Local union good_test x70;
+static volatile _Thread_Local union good_test x71;
+volatile static _Thread_Local union good_test x72;
+static const _Thread_Local volatile union good_test x73;
+static const volatile _Thread_Local union good_test x74;
+const static _Thread_Local volatile union good_test x75;
+const static volatile _Thread_Local union good_test x76;
+const volatile static _Thread_Local union good_test x77;
+static volatile _Thread_Local const union good_test x78;
+static volatile const _Thread_Local union good_test x79;
+volatile static _Thread_Local const union good_test x80;
+volatile static const _Thread_Local union good_test x81;
+volatile const static _Thread_Local union good_test x82;
+_Thread_Local const static union good_test x83;
+const _Thread_Local static union good_test x84;
+_Thread_Local volatile static union good_test x85;
+volatile _Thread_Local static union good_test x86;
+_Thread_Local const static volatile union good_test x87;
+_Thread_Local const volatile static union good_test x88;
+const _Thread_Local static volatile union good_test x89;
+const _Thread_Local volatile static union good_test x90;
+const volatile _Thread_Local static union good_test x91;
+_Thread_Local volatile static const union good_test x92;
+_Thread_Local volatile const static union good_test x93;
+volatile _Thread_Local static const union good_test x94;
+volatile _Thread_Local const static union good_test x95;
+volatile const _Thread_Local static union good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern union good_test2 { int x_factor2; } x21;
-extern const union good_test3 { int x_factor3; } x22;
-extern volatile union good_test4 { int x_factor4; } x23;
-extern const volatile union good_test5 { int x_factor5; } x24;
-extern volatile const union good_test6 { int x_factor6; } x25;
+extern union good_test1 { int x_factor1; } x_1;
+extern const union good_test2 { int x_factor2; } x_2;
+extern volatile union good_test3 { int x_factor3; } x_3;
+extern const volatile union good_test4 { int x_factor4; } x_4;
+extern volatile const union good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static union good_test7 { int x_factor7; } x26;
-static volatile union good_test8 { int x_factor8; } x27;
-static const volatile union good_test9 { int x_factor9; } x28;
-static volatile const union good_test10 { int x_factor10; } x29;
+static union good_test6 { int x_factor6; } x_6;
+static volatile union good_test7 { int x_factor7; } x_7;
+static const volatile union good_test8 { int x_factor8; } x_8;
+static volatile const union good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern union good_test11 { int x_factor11; } x30;
-volatile extern union good_test12 { int x_factor12; } x31;
-const extern volatile union good_test13 { int x_factor13; } x32;
-const volatile extern union good_test14 { int x_factor14; } x33;
-volatile extern const union good_test15 { int x_factor15; } x34;
-volatile const extern union good_test16 { int x_factor16; } x35;
+const extern union good_test10 { int x_factor10; } x_10;
+volatile extern union good_test11 { int x_factor11; } x_11;
+const extern volatile union good_test12 { int x_factor12; } x_12;
+const volatile extern union good_test13 { int x_factor13; } x_13;
+volatile extern const union good_test14 { int x_factor14; } x_14;
+volatile const extern union good_test15 { int x_factor15; } x_15;
+volatile static union good_test16 { int x_factor16; } x_16;
+const static volatile union good_test17 { int x_factor17; } x_17;
+const volatile static union good_test18 { int x_factor18; } x_18;
+volatile static const union good_test19 { int x_factor19; } x_19;
+volatile const static union good_test20 { int x_factor20; } x_20;
 
-volatile static union good_test17 { int x_factor17; } x16;
-const static volatile union good_test18 { int x_factor18; } x37;
-const volatile static union good_test19 { int x_factor19; } x38;
-volatile static const union good_test20 { int x_factor20; } x39;
-volatile const static union good_test21 { int x_factor21; } x40;
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local union good_test21 { int x_factor21; } x_21;
+extern _Thread_Local const union good_test22 { int x_factor22; } x_22;
+extern _Thread_Local volatile union good_test23 { int x_factor23; } x_23;
+extern _Thread_Local const volatile union good_test24 { int x_factor24; } x_24;
+extern _Thread_Local volatile const union good_test25 { int x_factor25; } x_25;
+_Thread_Local extern union good_test26 { int x_factor26; } x_26;
+_Thread_Local extern const union good_test27 { int x_factor27; } x_27;
+_Thread_Local extern volatile union good_test28 { int x_factor28; } x_28;
+_Thread_Local extern const volatile union good_test29 { int x_factor29; } x_29;
+_Thread_Local extern volatile const union good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on _Thread_Local static
+static _Thread_Local union good_test31 { int x_factor31; } x_31;
+static _Thread_Local const union good_test32 { int x_factor32; } x_32;
+static _Thread_Local volatile union good_test33 { int x_factor33; } x_33;
+static _Thread_Local const volatile union good_test34 { int x_factor34; } x_34;
+static _Thread_Local volatile const union good_test35 { int x_factor35; } x_35;
+_Thread_Local static union good_test36 { int x_factor36; } x_36;
+_Thread_Local static const union good_test37 { int x_factor37; } x_37;
+_Thread_Local static volatile union good_test38 { int x_factor38; } x_38;
+_Thread_Local static const volatile union good_test39 { int x_factor39; } x_39;
+_Thread_Local static volatile const union good_test40 { int x_factor40; } x_40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local union good_test41 { int x_factor41; } x_41;
+const extern _Thread_Local union good_test42 { int x_factor42; } x_42;
+extern volatile _Thread_Local union good_test43 { int x_factor43; } x_43;
+volatile extern _Thread_Local union good_test44 { int x_factor44; } x_44;
+extern const _Thread_Local volatile union good_test45 { int x_factor45; } x_45;
+extern const volatile _Thread_Local union good_test46 { int x_factor46; } x_46;
+const extern _Thread_Local volatile union good_test47 { int x_factor47; } x_47;
+const extern volatile _Thread_Local union good_test48 { int x_factor48; } x_48;
+const volatile extern _Thread_Local union good_test49 { int x_factor49; } x_49;
+extern volatile _Thread_Local const union good_test50 { int x_factor50; } x_50;
+extern volatile const _Thread_Local union good_test51 { int x_factor51; } x_51;
+volatile extern _Thread_Local const union good_test52 { int x_factor52; } x_52;
+volatile extern const _Thread_Local union good_test53 { int x_factor53; } x_53;
+volatile const extern _Thread_Local union good_test54 { int x_factor54; } x_54;
+_Thread_Local const extern union good_test55 { int x_factor55; } x_55;
+const _Thread_Local extern union good_test56 { int x_factor56; } x_56;
+_Thread_Local volatile extern union good_test57 { int x_factor57; } x_57;
+volatile _Thread_Local extern union good_test58 { int x_factor58; } x_58;
+_Thread_Local const extern volatile union good_test59 { int x_factor59; } x_59;
+_Thread_Local const volatile extern union good_test60 { int x_factor60; } x_60;
+const _Thread_Local extern volatile union good_test61 { int x_factor61; } x_61;
+const _Thread_Local volatile extern union good_test62 { int x_factor62; } x_62;
+const volatile _Thread_Local extern union good_test63 { int x_factor63; } x_63;
+_Thread_Local volatile extern const union good_test64 { int x_factor64; } x_64;
+_Thread_Local volatile const extern union good_test65 { int x_factor65; } x_65;
+volatile _Thread_Local extern const union good_test66 { int x_factor66; } x_66;
+volatile _Thread_Local const extern union good_test67 { int x_factor67; } x_67;
+volatile const _Thread_Local extern union good_test68 { int x_factor68; } x_68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local union good_test69 { int x_factor69; } x_69;
+const static _Thread_Local union good_test70 { int x_factor70; } x_70;
+static volatile _Thread_Local union good_test71 { int x_factor71; } x_71;
+volatile static _Thread_Local union good_test72 { int x_factor72; } x_72;
+static const _Thread_Local volatile union good_test73 { int x_factor73; } x_73;
+static const volatile _Thread_Local union good_test74 { int x_factor74; } x_74;
+const static _Thread_Local volatile union good_test75 { int x_factor75; } x_75;
+const static volatile _Thread_Local union good_test76 { int x_factor76; } x_76;
+const volatile static _Thread_Local union good_test77 { int x_factor77; } x_77;
+static volatile _Thread_Local const union good_test78 { int x_factor78; } x_78;
+static volatile const _Thread_Local union good_test79 { int x_factor79; } x_79;
+volatile static _Thread_Local const union good_test80 { int x_factor80; } x_80;
+volatile static const _Thread_Local union good_test81 { int x_factor81; } x_81;
+volatile const static _Thread_Local union good_test82 { int x_factor82; } x_82;
+_Thread_Local const static union good_test83 { int x_factor83; } x_83;
+const _Thread_Local static union good_test84 { int x_factor84; } x_84;
+_Thread_Local volatile static union good_test85 { int x_factor85; } x_85;
+volatile _Thread_Local static union good_test86 { int x_factor86; } x_86;
+_Thread_Local const static volatile union good_test87 { int x_factor87; } x_87;
+_Thread_Local const volatile static union good_test88 { int x_factor88; } x_88;
+const _Thread_Local static volatile union good_test89 { int x_factor89; } x_89;
+const _Thread_Local volatile static union good_test90 { int x_factor90; } x_90;
+const volatile _Thread_Local static union good_test91 { int x_factor91; } x_91;
+_Thread_Local volatile static const union good_test92 { int x_factor92; } x_92;
+_Thread_Local volatile const static union good_test93 { int x_factor93; } x_93;
+volatile _Thread_Local static const union good_test94 { int x_factor94; } x_94;
+volatile _Thread_Local const static union good_test95 { int x_factor95; } x_95;
+volatile const _Thread_Local static union good_test96 { int x_factor96; } x_96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_union_def.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_union_def.hpp	2011-03-04 08:30:58 UTC (rev 621)
+++ trunk/tests/zcc/decl.C99/Pass_union_def.hpp	2011-03-04 08:32:01 UTC (rev 622)
@@ -1,9 +1,9 @@
 // decl.C99\Pass_union_def.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined union
-// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 
 union good_test {
-	int x_factor;
+	int x_factor
 };
 
 // ringing the changes on extern
@@ -27,39 +27,205 @@
 const volatile extern union good_test x13;
 volatile extern const union good_test x14;
 volatile const extern union good_test x15;
-
 volatile static union good_test x16;
 const static volatile union good_test x17;
 const volatile static union good_test x18;
 volatile static const union good_test x19;
 volatile const static union good_test x20;
 
+// ringing the changes on thread_local extern
+extern thread_local union good_test x21;
+extern thread_local const union good_test x22;
+extern thread_local volatile union good_test x23;
+extern thread_local const volatile union good_test x24;
+extern thread_local volatile const union good_test x25;
+thread_local extern union good_test x26;
+thread_local extern const union good_test x27;
+thread_local extern volatile union good_test x28;
+thread_local extern const volatile union good_test x29;
+thread_local extern volatile const union good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local union good_test x31;
+static thread_local const union good_test x32;
+static thread_local volatile union good_test x33;
+static thread_local const volatile union good_test x34;
+static thread_local volatile const union good_test x35;
+thread_local static union good_test x36;
+thread_local static const union good_test x37;
+thread_local static volatile union good_test x38;
+thread_local static const volatile union good_test x39;
+thread_local static volatile const union good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local union good_test x41;
+const extern thread_local union good_test x42;
+extern volatile thread_local union good_test x43;
+volatile extern thread_local union good_test x44;
+extern const thread_local volatile union good_test x45;
+extern const volatile thread_local union good_test x46;
+const extern thread_local volatile union good_test x47;
+const extern volatile thread_local union good_test x48;
+const volatile extern thread_local union good_test x49;
+extern volatile thread_local const union good_test x50;
+extern volatile const thread_local union good_test x51;
+volatile extern thread_local const union good_test x52;
+volatile extern const thread_local union good_test x53;
+volatile const extern thread_local union good_test x54;
+thread_local const extern union good_test x55;
+const thread_local extern union good_test x56;
+thread_local volatile extern union good_test x57;
+volatile thread_local extern union good_test x58;
+thread_local const extern volatile union good_test x59;
+thread_local const volatile extern union good_test x60;
+const thread_local extern volatile union good_test x61;
+const thread_local volatile extern union good_test x62;
+const volatile thread_local extern union good_test x63;
+thread_local volatile extern const union good_test x64;
+thread_local volatile const extern union good_test x65;
+volatile thread_local extern const union good_test x66;
+volatile thread_local const extern union good_test x67;
+volatile const thread_local extern union good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local union good_test x69;
+const static thread_local union good_test x70;
+static volatile thread_local union good_test x71;
+volatile static thread_local union good_test x72;
+static const thread_local volatile union good_test x73;
+static const volatile thread_local union good_test x74;
+const static thread_local volatile union good_test x75;
+const static volatile thread_local union good_test x76;
+const volatile static thread_local union good_test x77;
+static volatile thread_local const union good_test x78;
+static volatile const thread_local union good_test x79;
+volatile static thread_local const union good_test x80;
+volatile static const thread_local union good_test x81;
+volatile const static thread_local union good_test x82;
+thread_local const static union good_test x83;
+const thread_local static union good_test x84;
+thread_local volatile static union good_test x85;
+volatile thread_local static union good_test x86;
+thread_local const static volatile union good_test x87;
+thread_local const volatile static union good_test x88;
+const thread_local static volatile union good_test x89;
+const thread_local volatile static union good_test x90;
+const volatile thread_local static union good_test x91;
+thread_local volatile static const union good_test x92;
+thread_local volatile const static union good_test x93;
+volatile thread_local static const union good_test x94;
+volatile thread_local const static union good_test x95;
+volatile const thread_local static union good_test x96;
+
 // define-declares
 // ringing the changes on extern
-extern union good_test2 { int x_factor2; } x21;
-extern const union good_test3 { int x_factor3; } x22;
-extern volatile union good_test4 { int x_factor4; } x23;
-extern const volatile union good_test5 { int x_factor5; } x24;
-extern volatile const union good_test6 { int x_factor6; } x25;
+extern union good_test1 { int x_factor1; } x_1;
+extern const union good_test2 { int x_factor2; } x_2;
+extern volatile union good_test3 { int x_factor3; } x_3;
+extern const volatile union good_test4 { int x_factor4; } x_4;
+extern volatile const union good_test5 { int x_factor5; } x_5;
 
 // ringing the changes on static
 // (don't test static const -- no chance to initialize before use)
-static union good_test7 { int x_factor7; } x26;
-static volatile union good_test8 { int x_factor8; } x27;
-static const volatile union good_test9 { int x_factor9; } x28;
-static volatile const union good_test10 { int x_factor10; } x29;
+static union good_test6 { int x_factor6; } x_6;
+static volatile union good_test7 { int x_factor7; } x_7;
+static const volatile union good_test8 { int x_factor8; } x_8;
+static volatile const union good_test9 { int x_factor9; } x_9;
 
 // extern/static not in first postion is deprecated, but legal
-const extern union good_test11 { int x_factor11; } x30;
-volatile extern union good_test12 { int x_factor12; } x31;
-const extern volatile union good_test13 { int x_factor13; } x32;
-const volatile extern union good_test14 { int x_factor14; } x33;
-volatile extern const union good_test15 { int x_factor15; } x34;
-volatile const extern union good_test16 { int x_factor16; } x35;
+const extern union good_test10 { int x_factor10; } x_10;
+volatile extern union good_test11 { int x_factor11; } x_11;
+const extern volatile union good_test12 { int x_factor12; } x_12;
+const volatile extern union good_test13 { int x_factor13; } x_13;
+volatile extern const union good_test14 { int x_factor14; } x_14;
+volatile const extern union good_test15 { int x_factor15; } x_15;
+volatile static union good_test16 { int x_factor16; } x_16;
+const static volatile union good_test17 { int x_factor17; } x_17;
+const volatile static union good_test18 { int x_factor18; } x_18;
+volatile static const union good_test19 { int x_factor19; } x_19;
+volatile const static union good_test20 { int x_factor20; } x_20;
 
-volatile static union good_test17 { int x_factor17; } x16;
-const static volatile union good_test18 { int x_factor18; } x37;
-const volatile static union good_test19 { int x_factor19; } x38;
-volatile static const union good_test20 { int x_factor20; } x39;
-volatile const static union good_test21 { int x_factor21; } x40;
+// ringing the changes on thread_local extern
+extern thread_local union good_test21 { int x_factor21; } x_21;
+extern thread_local const union good_test22 { int x_factor22; } x_22;
+extern thread_local volatile union good_test23 { int x_factor23; } x_23;
+extern thread_local const volatile union good_test24 { int x_factor24; } x_24;
+extern thread_local volatile const union good_test25 { int x_factor25; } x_25;
+thread_local extern union good_test26 { int x_factor26; } x_26;
+thread_local extern const union good_test27 { int x_factor27; } x_27;
+thread_local extern volatile union good_test28 { int x_factor28; } x_28;
+thread_local extern const volatile union good_test29 { int x_factor29; } x_29;
+thread_local extern volatile const union good_test30 { int x_factor30; } x_30;
 
+// ringing the changes on thread_local static
+static thread_local union good_test31 { int x_factor31; } x_31;
+static thread_local const union good_test32 { int x_factor32; } x_32;
+static thread_local volatile union good_test33 { int x_factor33; } x_33;
+static thread_local const volatile union good_test34 { int x_factor34; } x_34;
+static thread_local volatile const union good_test35 { int x_factor35; } x_35;
+thread_local static union good_test36 { int x_factor36; } x_36;
+thread_local static const union good_test37 { int x_factor37; } x_37;
+thread_local static volatile union good_test38 { int x_factor38; } x_38;
+thread_local static const volatile union good_test39 { int x_factor39; } x_39;
+thread_local static volatile const union good_test40 { int x_factor40; } x_40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local union good_test41 { int x_factor41; } x_41;
+const extern thread_local union good_test42 { int x_factor42; } x_42;
+extern volatile thread_local union good_test43 { int x_factor43; } x_43;
+volatile extern thread_local union good_test44 { int x_factor44; } x_44;
+extern const thread_local volatile union good_test45 { int x_factor45; } x_45;
+extern const volatile thread_local union good_test46 { int x_factor46; } x_46;
+const extern thread_local volatile union good_test47 { int x_factor47; } x_47;
+const extern volatile thread_local union good_test48 { int x_factor48; } x_48;
+const volatile extern thread_local union good_test49 { int x_factor49; } x_49;
+extern volatile thread_local const union good_test50 { int x_factor50; } x_50;
+extern volatile const thread_local union good_test51 { int x_factor51; } x_51;
+volatile extern thread_local const union good_test52 { int x_factor52; } x_52;
+volatile extern const thread_local union good_test53 { int x_factor53; } x_53;
+volatile const extern thread_local union good_test54 { int x_factor54; } x_54;
+thread_local const extern union good_test55 { int x_factor55; } x_55;
+const thread_local extern union good_test56 { int x_factor56; } x_56;
+thread_local volatile extern union good_test57 { int x_factor57; } x_57;
+volatile thread_local extern union good_test58 { int x_factor58; } x_58;
+thread_local const extern volatile union good_test59 { int x_factor59; } x_59;
+thread_local const volatile extern union good_test60 { int x_factor60; } x_60;
+const thread_local extern volatile union good_test61 { int x_factor61; } x_61;
+const thread_local volatile extern union good_test62 { int x_factor62; } x_62;
+const volatile thread_local extern union good_test63 { int x_factor63; } x_63;
+thread_local volatile extern const union good_test64 { int x_factor64; } x_64;
+thread_local volatile const extern union good_test65 { int x_factor65; } x_65;
+volatile thread_local extern const union good_test66 { int x_factor66; } x_66;
+volatile thread_local const extern union good_test67 { int x_factor67; } x_67;
+volatile const thread_local extern union good_test68 { int x_factor68; } x_68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local union good_test69 { int x_factor69; } x_69;
+const static thread_local union good_test70 { int x_factor70; } x_70;
+static volatile thread_local union good_test71 { int x_factor71; } x_71;
+volatile static thread_local union good_test72 { int x_factor72; } x_72;
+static const thread_local volatile union good_test73 { int x_factor73; } x_73;
+static const volatile thread_local union good_test74 { int x_factor74; } x_74;
+const static thread_local volatile union good_test75 { int x_factor75; } x_75;
+const static volatile thread_local union good_test76 { int x_factor76; } x_76;
+const volatile static thread_local union good_test77 { int x_factor77; } x_77;
+static volatile thread_local const union good_test78 { int x_factor78; } x_78;
+static volatile const thread_local union good_test79 { int x_factor79; } x_79;
+volatile static thread_local const union good_test80 { int x_factor80; } x_80;
+volatile static const thread_local union good_test81 { int x_factor81; } x_81;
+volatile const static thread_local union good_test82 { int x_factor82; } x_82;
+thread_local const static union good_test83 { int x_factor83; } x_83;
+const thread_local static union good_test84 { int x_factor84; } x_84;
+thread_local volatile static union good_test85 { int x_factor85; } x_85;
+volatile thread_local static union good_test86 { int x_factor86; } x_86;
+thread_local const static volatile union good_test87 { int x_factor87; } x_87;
+thread_local const volatile static union good_test88 { int x_factor88; } x_88;
+const thread_local static volatile union good_test89 { int x_factor89; } x_89;
+const thread_local volatile static union good_test90 { int x_factor90; } x_90;
+const volatile thread_local static union good_test91 { int x_factor91; } x_91;
+thread_local volatile static const union good_test92 { int x_factor92; } x_92;
+thread_local volatile const static union good_test93 { int x_factor93; } x_93;
+volatile thread_local static const union good_test94 { int x_factor94; } x_94;
+volatile thread_local const static union good_test95 { int x_factor95; } x_95;
+volatile const thread_local static union good_test96 { int x_factor96; } x_96;
+

Modified: trunk/tools/decl_infile.py
===================================================================
--- trunk/tools/decl_infile.py	2011-03-04 08:30:58 UTC (rev 621)
+++ trunk/tools/decl_infile.py	2011-03-04 08:32:01 UTC (rev 622)
@@ -5,7 +5,7 @@
 # (C)2011 Kenneth Boyd, license: MIT.txt
 
 # target files
-target_files = ['Pass_enum_def.in', 'Pass_struct_def.in']
+target_files = ['Pass_enum_def.in', 'Pass_struct_def.in', 'Pass_union_def.in']
 
 invariant_header_lines = [
 'SUFFIXES h hpp\n'
@@ -14,10 +14,12 @@
 ]
 
 context = {	'Pass_enum_def.in':'// using singly defined enum\n',
-			'Pass_struct_def.in':'// using singly defined struct\n'}
+			'Pass_struct_def.in':'// using singly defined struct\n',
+			'Pass_union_def.in':'// using singly defined union\n'}
 
 global_define = {	'Pass_enum_def.in':'\nenum good_test {\n\tx_factor = 1\n};\n\n',
-					'Pass_struct_def.in':'\nstruct good_test {\n\tint x_factor\n};\n\n'}
+					'Pass_struct_def.in':'\nstruct good_test {\n\tint x_factor\n};\n\n',
+					'Pass_union_def.in':'\nunion good_test {\n\tint x_factor\n};\n\n'}
 
 section_comments = ['// ringing the changes on extern\n',
 "// ringing the changes on static\n// (don't test static const -- no chance to initialize before use)\n",
@@ -33,16 +35,24 @@
 def struct_decl(i):
 	return "struct good_test x"+i
 
-var_decl = {'Pass_enum_def.in':enum_decl, 'Pass_struct_def.in':struct_decl}
+def union_decl(i):
+	return "union good_test x"+i
 
+var_decl = {'Pass_enum_def.in':enum_decl, 'Pass_struct_def.in':struct_decl,
+			'Pass_union_def.in':union_decl}
+
 def enum_def(i):
 	return 'enum good_test'+i+' { x_factor'+i+' = 1 } x_'+i
 
 def struct_def(i):
 	return 'struct good_test'+i+' { int x_factor'+i+'; } x_'+i
 
-var_def = {'Pass_enum_def.in':enum_def, 'Pass_struct_def.in':struct_def}
+def union_def(i):
+	return 'union good_test'+i+' { int x_factor'+i+'; } x_'+i
 
+var_def = {	'Pass_enum_def.in':enum_def, 'Pass_struct_def.in':struct_def,
+			'Pass_union_def.in':union_def}
+
 test_qualifiers = [
 'extern',
 'extern const',



From zaimoni at mail.berlios.de  Fri Mar 25 00:53:08 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Fri, 25 Mar 2011 00:53:08 +0100
Subject: [Zcplusplus-commits] r623 - in trunk: tests/zcc/decl.C99
	tests/zcc.in/decl.C99 tools
Message-ID: <20110324235308.95339480733@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-25 00:53:08 +0100 (Fri, 25 Mar 2011)
New Revision: 623

Added:
   trunk/tests/zcc.in/decl.C99/Pass_struct_def_decl.in
Modified:
   trunk/tests/zcc/decl.C99/Pass_struct_def_decl.h
   trunk/tests/zcc/decl.C99/Pass_struct_def_decl.hpp
   trunk/tools/decl_infile.py
Log:
test _Thread_Local/thread_local parsing for struct with a normal initial def-declaration

Modified: trunk/tests/zcc/decl.C99/Pass_struct_def_decl.h
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_struct_def_decl.h	2011-03-04 08:32:01 UTC (rev 622)
+++ trunk/tests/zcc/decl.C99/Pass_struct_def_decl.h	2011-03-24 23:53:08 UTC (rev 623)
@@ -1,20 +1,119 @@
 // decl.C99\Pass_struct_def_decl.h
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined struct
-// (C)2010 Kenneth Boyd, license: MIT.txt
 
 struct good_test {
-	int x_factor;
+	int x_factor
 } y;
 
-// exercise some declarations
-struct good_test x1;
-const struct good_test c1;
-struct good_test const c2;
-volatile struct good_test v1;
-struct good_test volatile v2;
-const volatile struct good_test cv1;
-volatile const struct good_test cv2;
-const struct good_test volatile cv3;
-volatile struct good_test const cv4;
-struct good_test const volatile cv5;
-struct good_test volatile const cv6;
+// ringing the changes on extern
+extern struct good_test x1;
+extern const struct good_test x2;
+extern volatile struct good_test x3;
+extern const volatile struct good_test x4;
+extern volatile const struct good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static struct good_test x6;
+static volatile struct good_test x7;
+static const volatile struct good_test x8;
+static volatile const struct good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern struct good_test x10;
+volatile extern struct good_test x11;
+const extern volatile struct good_test x12;
+const volatile extern struct good_test x13;
+volatile extern const struct good_test x14;
+volatile const extern struct good_test x15;
+volatile static struct good_test x16;
+const static volatile struct good_test x17;
+const volatile static struct good_test x18;
+volatile static const struct good_test x19;
+volatile const static struct good_test x20;
+
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local struct good_test x21;
+extern _Thread_Local const struct good_test x22;
+extern _Thread_Local volatile struct good_test x23;
+extern _Thread_Local const volatile struct good_test x24;
+extern _Thread_Local volatile const struct good_test x25;
+_Thread_Local extern struct good_test x26;
+_Thread_Local extern const struct good_test x27;
+_Thread_Local extern volatile struct good_test x28;
+_Thread_Local extern const volatile struct good_test x29;
+_Thread_Local extern volatile const struct good_test x30;
+
+// ringing the changes on _Thread_Local static
+static _Thread_Local struct good_test x31;
+static _Thread_Local const struct good_test x32;
+static _Thread_Local volatile struct good_test x33;
+static _Thread_Local const volatile struct good_test x34;
+static _Thread_Local volatile const struct good_test x35;
+_Thread_Local static struct good_test x36;
+_Thread_Local static const struct good_test x37;
+_Thread_Local static volatile struct good_test x38;
+_Thread_Local static const volatile struct good_test x39;
+_Thread_Local static volatile const struct good_test x40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local struct good_test x41;
+const extern _Thread_Local struct good_test x42;
+extern volatile _Thread_Local struct good_test x43;
+volatile extern _Thread_Local struct good_test x44;
+extern const _Thread_Local volatile struct good_test x45;
+extern const volatile _Thread_Local struct good_test x46;
+const extern _Thread_Local volatile struct good_test x47;
+const extern volatile _Thread_Local struct good_test x48;
+const volatile extern _Thread_Local struct good_test x49;
+extern volatile _Thread_Local const struct good_test x50;
+extern volatile const _Thread_Local struct good_test x51;
+volatile extern _Thread_Local const struct good_test x52;
+volatile extern const _Thread_Local struct good_test x53;
+volatile const extern _Thread_Local struct good_test x54;
+_Thread_Local const extern struct good_test x55;
+const _Thread_Local extern struct good_test x56;
+_Thread_Local volatile extern struct good_test x57;
+volatile _Thread_Local extern struct good_test x58;
+_Thread_Local const extern volatile struct good_test x59;
+_Thread_Local const volatile extern struct good_test x60;
+const _Thread_Local extern volatile struct good_test x61;
+const _Thread_Local volatile extern struct good_test x62;
+const volatile _Thread_Local extern struct good_test x63;
+_Thread_Local volatile extern const struct good_test x64;
+_Thread_Local volatile const extern struct good_test x65;
+volatile _Thread_Local extern const struct good_test x66;
+volatile _Thread_Local const extern struct good_test x67;
+volatile const _Thread_Local extern struct good_test x68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local struct good_test x69;
+const static _Thread_Local struct good_test x70;
+static volatile _Thread_Local struct good_test x71;
+volatile static _Thread_Local struct good_test x72;
+static const _Thread_Local volatile struct good_test x73;
+static const volatile _Thread_Local struct good_test x74;
+const static _Thread_Local volatile struct good_test x75;
+const static volatile _Thread_Local struct good_test x76;
+const volatile static _Thread_Local struct good_test x77;
+static volatile _Thread_Local const struct good_test x78;
+static volatile const _Thread_Local struct good_test x79;
+volatile static _Thread_Local const struct good_test x80;
+volatile static const _Thread_Local struct good_test x81;
+volatile const static _Thread_Local struct good_test x82;
+_Thread_Local const static struct good_test x83;
+const _Thread_Local static struct good_test x84;
+_Thread_Local volatile static struct good_test x85;
+volatile _Thread_Local static struct good_test x86;
+_Thread_Local const static volatile struct good_test x87;
+_Thread_Local const volatile static struct good_test x88;
+const _Thread_Local static volatile struct good_test x89;
+const _Thread_Local volatile static struct good_test x90;
+const volatile _Thread_Local static struct good_test x91;
+_Thread_Local volatile static const struct good_test x92;
+_Thread_Local volatile const static struct good_test x93;
+volatile _Thread_Local static const struct good_test x94;
+volatile _Thread_Local const static struct good_test x95;
+volatile const _Thread_Local static struct good_test x96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_struct_def_decl.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_struct_def_decl.hpp	2011-03-04 08:32:01 UTC (rev 622)
+++ trunk/tests/zcc/decl.C99/Pass_struct_def_decl.hpp	2011-03-24 23:53:08 UTC (rev 623)
@@ -1,20 +1,119 @@
 // decl.C99\Pass_struct_def_decl.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined struct
-// (C)2010 Kenneth Boyd, license: MIT.txt
 
 struct good_test {
-	int x_factor;
+	int x_factor
 } y;
 
-// exercise some declarations
-struct good_test x1;
-const struct good_test c1;
-struct good_test const c2;
-volatile struct good_test v1;
-struct good_test volatile v2;
-const volatile struct good_test cv1;
-volatile const struct good_test cv2;
-const struct good_test volatile cv3;
-volatile struct good_test const cv4;
-struct good_test const volatile cv5;
-struct good_test volatile const cv6;
+// ringing the changes on extern
+extern struct good_test x1;
+extern const struct good_test x2;
+extern volatile struct good_test x3;
+extern const volatile struct good_test x4;
+extern volatile const struct good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static struct good_test x6;
+static volatile struct good_test x7;
+static const volatile struct good_test x8;
+static volatile const struct good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern struct good_test x10;
+volatile extern struct good_test x11;
+const extern volatile struct good_test x12;
+const volatile extern struct good_test x13;
+volatile extern const struct good_test x14;
+volatile const extern struct good_test x15;
+volatile static struct good_test x16;
+const static volatile struct good_test x17;
+const volatile static struct good_test x18;
+volatile static const struct good_test x19;
+volatile const static struct good_test x20;
+
+// ringing the changes on thread_local extern
+extern thread_local struct good_test x21;
+extern thread_local const struct good_test x22;
+extern thread_local volatile struct good_test x23;
+extern thread_local const volatile struct good_test x24;
+extern thread_local volatile const struct good_test x25;
+thread_local extern struct good_test x26;
+thread_local extern const struct good_test x27;
+thread_local extern volatile struct good_test x28;
+thread_local extern const volatile struct good_test x29;
+thread_local extern volatile const struct good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local struct good_test x31;
+static thread_local const struct good_test x32;
+static thread_local volatile struct good_test x33;
+static thread_local const volatile struct good_test x34;
+static thread_local volatile const struct good_test x35;
+thread_local static struct good_test x36;
+thread_local static const struct good_test x37;
+thread_local static volatile struct good_test x38;
+thread_local static const volatile struct good_test x39;
+thread_local static volatile const struct good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local struct good_test x41;
+const extern thread_local struct good_test x42;
+extern volatile thread_local struct good_test x43;
+volatile extern thread_local struct good_test x44;
+extern const thread_local volatile struct good_test x45;
+extern const volatile thread_local struct good_test x46;
+const extern thread_local volatile struct good_test x47;
+const extern volatile thread_local struct good_test x48;
+const volatile extern thread_local struct good_test x49;
+extern volatile thread_local const struct good_test x50;
+extern volatile const thread_local struct good_test x51;
+volatile extern thread_local const struct good_test x52;
+volatile extern const thread_local struct good_test x53;
+volatile const extern thread_local struct good_test x54;
+thread_local const extern struct good_test x55;
+const thread_local extern struct good_test x56;
+thread_local volatile extern struct good_test x57;
+volatile thread_local extern struct good_test x58;
+thread_local const extern volatile struct good_test x59;
+thread_local const volatile extern struct good_test x60;
+const thread_local extern volatile struct good_test x61;
+const thread_local volatile extern struct good_test x62;
+const volatile thread_local extern struct good_test x63;
+thread_local volatile extern const struct good_test x64;
+thread_local volatile const extern struct good_test x65;
+volatile thread_local extern const struct good_test x66;
+volatile thread_local const extern struct good_test x67;
+volatile const thread_local extern struct good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local struct good_test x69;
+const static thread_local struct good_test x70;
+static volatile thread_local struct good_test x71;
+volatile static thread_local struct good_test x72;
+static const thread_local volatile struct good_test x73;
+static const volatile thread_local struct good_test x74;
+const static thread_local volatile struct good_test x75;
+const static volatile thread_local struct good_test x76;
+const volatile static thread_local struct good_test x77;
+static volatile thread_local const struct good_test x78;
+static volatile const thread_local struct good_test x79;
+volatile static thread_local const struct good_test x80;
+volatile static const thread_local struct good_test x81;
+volatile const static thread_local struct good_test x82;
+thread_local const static struct good_test x83;
+const thread_local static struct good_test x84;
+thread_local volatile static struct good_test x85;
+volatile thread_local static struct good_test x86;
+thread_local const static volatile struct good_test x87;
+thread_local const volatile static struct good_test x88;
+const thread_local static volatile struct good_test x89;
+const thread_local volatile static struct good_test x90;
+const volatile thread_local static struct good_test x91;
+thread_local volatile static const struct good_test x92;
+thread_local volatile const static struct good_test x93;
+volatile thread_local static const struct good_test x94;
+volatile thread_local const static struct good_test x95;
+volatile const thread_local static struct good_test x96;
+

Added: trunk/tests/zcc.in/decl.C99/Pass_struct_def_decl.in
===================================================================
--- trunk/tests/zcc.in/decl.C99/Pass_struct_def_decl.in	                        (rev 0)
+++ trunk/tests/zcc.in/decl.C99/Pass_struct_def_decl.in	2011-03-24 23:53:08 UTC (rev 623)
@@ -0,0 +1,120 @@
+SUFFIXES h hpp
+OBJECTLIKE_MACRO THREAD_LOCAL _Thread_Local thread_local
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined struct
+
+struct good_test {
+	int x_factor
+} y;
+
+// ringing the changes on extern
+extern struct good_test x1;
+extern const struct good_test x2;
+extern volatile struct good_test x3;
+extern const volatile struct good_test x4;
+extern volatile const struct good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static struct good_test x6;
+static volatile struct good_test x7;
+static const volatile struct good_test x8;
+static volatile const struct good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern struct good_test x10;
+volatile extern struct good_test x11;
+const extern volatile struct good_test x12;
+const volatile extern struct good_test x13;
+volatile extern const struct good_test x14;
+volatile const extern struct good_test x15;
+volatile static struct good_test x16;
+const static volatile struct good_test x17;
+const volatile static struct good_test x18;
+volatile static const struct good_test x19;
+volatile const static struct good_test x20;
+
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL struct good_test x21;
+extern THREAD_LOCAL const struct good_test x22;
+extern THREAD_LOCAL volatile struct good_test x23;
+extern THREAD_LOCAL const volatile struct good_test x24;
+extern THREAD_LOCAL volatile const struct good_test x25;
+THREAD_LOCAL extern struct good_test x26;
+THREAD_LOCAL extern const struct good_test x27;
+THREAD_LOCAL extern volatile struct good_test x28;
+THREAD_LOCAL extern const volatile struct good_test x29;
+THREAD_LOCAL extern volatile const struct good_test x30;
+
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL struct good_test x31;
+static THREAD_LOCAL const struct good_test x32;
+static THREAD_LOCAL volatile struct good_test x33;
+static THREAD_LOCAL const volatile struct good_test x34;
+static THREAD_LOCAL volatile const struct good_test x35;
+THREAD_LOCAL static struct good_test x36;
+THREAD_LOCAL static const struct good_test x37;
+THREAD_LOCAL static volatile struct good_test x38;
+THREAD_LOCAL static const volatile struct good_test x39;
+THREAD_LOCAL static volatile const struct good_test x40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL struct good_test x41;
+const extern THREAD_LOCAL struct good_test x42;
+extern volatile THREAD_LOCAL struct good_test x43;
+volatile extern THREAD_LOCAL struct good_test x44;
+extern const THREAD_LOCAL volatile struct good_test x45;
+extern const volatile THREAD_LOCAL struct good_test x46;
+const extern THREAD_LOCAL volatile struct good_test x47;
+const extern volatile THREAD_LOCAL struct good_test x48;
+const volatile extern THREAD_LOCAL struct good_test x49;
+extern volatile THREAD_LOCAL const struct good_test x50;
+extern volatile const THREAD_LOCAL struct good_test x51;
+volatile extern THREAD_LOCAL const struct good_test x52;
+volatile extern const THREAD_LOCAL struct good_test x53;
+volatile const extern THREAD_LOCAL struct good_test x54;
+THREAD_LOCAL const extern struct good_test x55;
+const THREAD_LOCAL extern struct good_test x56;
+THREAD_LOCAL volatile extern struct good_test x57;
+volatile THREAD_LOCAL extern struct good_test x58;
+THREAD_LOCAL const extern volatile struct good_test x59;
+THREAD_LOCAL const volatile extern struct good_test x60;
+const THREAD_LOCAL extern volatile struct good_test x61;
+const THREAD_LOCAL volatile extern struct good_test x62;
+const volatile THREAD_LOCAL extern struct good_test x63;
+THREAD_LOCAL volatile extern const struct good_test x64;
+THREAD_LOCAL volatile const extern struct good_test x65;
+volatile THREAD_LOCAL extern const struct good_test x66;
+volatile THREAD_LOCAL const extern struct good_test x67;
+volatile const THREAD_LOCAL extern struct good_test x68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL struct good_test x69;
+const static THREAD_LOCAL struct good_test x70;
+static volatile THREAD_LOCAL struct good_test x71;
+volatile static THREAD_LOCAL struct good_test x72;
+static const THREAD_LOCAL volatile struct good_test x73;
+static const volatile THREAD_LOCAL struct good_test x74;
+const static THREAD_LOCAL volatile struct good_test x75;
+const static volatile THREAD_LOCAL struct good_test x76;
+const volatile static THREAD_LOCAL struct good_test x77;
+static volatile THREAD_LOCAL const struct good_test x78;
+static volatile const THREAD_LOCAL struct good_test x79;
+volatile static THREAD_LOCAL const struct good_test x80;
+volatile static const THREAD_LOCAL struct good_test x81;
+volatile const static THREAD_LOCAL struct good_test x82;
+THREAD_LOCAL const static struct good_test x83;
+const THREAD_LOCAL static struct good_test x84;
+THREAD_LOCAL volatile static struct good_test x85;
+volatile THREAD_LOCAL static struct good_test x86;
+THREAD_LOCAL const static volatile struct good_test x87;
+THREAD_LOCAL const volatile static struct good_test x88;
+const THREAD_LOCAL static volatile struct good_test x89;
+const THREAD_LOCAL volatile static struct good_test x90;
+const volatile THREAD_LOCAL static struct good_test x91;
+THREAD_LOCAL volatile static const struct good_test x92;
+THREAD_LOCAL volatile const static struct good_test x93;
+volatile THREAD_LOCAL static const struct good_test x94;
+volatile THREAD_LOCAL const static struct good_test x95;
+volatile const THREAD_LOCAL static struct good_test x96;
+

Modified: trunk/tools/decl_infile.py
===================================================================
--- trunk/tools/decl_infile.py	2011-03-04 08:32:01 UTC (rev 622)
+++ trunk/tools/decl_infile.py	2011-03-24 23:53:08 UTC (rev 623)
@@ -6,6 +6,7 @@
 
 # target files
 target_files = ['Pass_enum_def.in', 'Pass_struct_def.in', 'Pass_union_def.in']
+target_files2 = ['Pass_struct_def_decl.in']
 
 invariant_header_lines = [
 'SUFFIXES h hpp\n'
@@ -15,11 +16,13 @@
 
 context = {	'Pass_enum_def.in':'// using singly defined enum\n',
 			'Pass_struct_def.in':'// using singly defined struct\n',
-			'Pass_union_def.in':'// using singly defined union\n'}
+			'Pass_union_def.in':'// using singly defined union\n',
+			'Pass_struct_def_decl.in':'// using singly defined struct\n'}
 
 global_define = {	'Pass_enum_def.in':'\nenum good_test {\n\tx_factor = 1\n};\n\n',
 					'Pass_struct_def.in':'\nstruct good_test {\n\tint x_factor\n};\n\n',
-					'Pass_union_def.in':'\nunion good_test {\n\tint x_factor\n};\n\n'}
+					'Pass_union_def.in':'\nunion good_test {\n\tint x_factor\n};\n\n',
+					'Pass_struct_def_decl.in':'\nstruct good_test {\n\tint x_factor\n} y;\n\n'}
 
 section_comments = ['// ringing the changes on extern\n',
 "// ringing the changes on static\n// (don't test static const -- no chance to initialize before use)\n",
@@ -39,7 +42,7 @@
 	return "union good_test x"+i
 
 var_decl = {'Pass_enum_def.in':enum_decl, 'Pass_struct_def.in':struct_decl,
-			'Pass_union_def.in':union_decl}
+			'Pass_union_def.in':union_decl, 'Pass_struct_def_decl.in':struct_decl}
 
 def enum_def(i):
 	return 'enum good_test'+i+' { x_factor'+i+' = 1 } x_'+i
@@ -239,8 +242,56 @@
 
 	TargetFile.close()
 
+def SpawnTestCase2(dest_file):
+	# first part copied from SpawnTestCase
+	TargetFile = open(dest_file,'w')
+	for line in invariant_header_lines:
+		TargetFile.write(line)
+	TargetFile.write(context[dest_file])
+	TargetFile.write(global_define[dest_file])
 
+	TargetFile.write(section_comments[0])
+	for i in xrange(5):
+		TargetFile.write(test_qualifiers[i]+' '+var_decl[dest_file](str(i+1))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[1])
+	for i in xrange(4):
+		TargetFile.write(test_qualifiers[i+5]+' '+var_decl[dest_file](str(i+6))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[2])
+	for i in xrange(11):
+		TargetFile.write(test_qualifiers[i+9]+' '+var_decl[dest_file](str(i+10))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[3])
+	for i in xrange(10):
+		TargetFile.write(test_qualifiers[i+20]+' '+var_decl[dest_file](str(i+21))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[4])
+	for i in xrange(10):
+		TargetFile.write(test_qualifiers[i+30]+' '+var_decl[dest_file](str(i+31))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[5])
+	for i in xrange(28):
+		TargetFile.write(test_qualifiers[i+40]+' '+var_decl[dest_file](str(i+41))+';\n')
+	TargetFile.write('\n')
+
+	TargetFile.write(section_comments[6])
+	for i in xrange(28):
+		TargetFile.write(test_qualifiers[i+68]+' '+var_decl[dest_file](str(i+69))+';\n')
+	TargetFile.write('\n')
+
+	# no define-declares
+	TargetFile.close()
+
+
 if __name__ == '__main__':
 	for filename in target_files:
 		SpawnTestCase(filename)
+	for filename in target_files2:
+		SpawnTestCase2(filename)
 



From zaimoni at mail.berlios.de  Sat Mar 26 13:03:55 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Sat, 26 Mar 2011 13:03:55 +0100
Subject: [Zcplusplus-commits] r624 - in trunk: tests/zcc/decl.C99
	tests/zcc.in/decl.C99 tools
Message-ID: <20110326120355.679374807E1@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-26 13:03:55 +0100 (Sat, 26 Mar 2011)
New Revision: 624

Added:
   trunk/tests/zcc.in/decl.C99/Pass_enum_def_decl.in
   trunk/tests/zcc.in/decl.C99/Pass_union_def_decl.in
   trunk/tests/zcc/decl.C99/Pass_enum_def_decl.h
   trunk/tests/zcc/decl.C99/Pass_enum_def_decl.hpp
Modified:
   trunk/tests/zcc/decl.C99/Pass_union_def_decl.h
   trunk/tests/zcc/decl.C99/Pass_union_def_decl.hpp
   trunk/tools/decl_infile.py
Log:
test parsing of def-decl union, enumerations for thread_local/_Thread_local

Added: trunk/tests/zcc/decl.C99/Pass_enum_def_decl.h
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_enum_def_decl.h	                        (rev 0)
+++ trunk/tests/zcc/decl.C99/Pass_enum_def_decl.h	2011-03-26 12:03:55 UTC (rev 624)
@@ -0,0 +1,119 @@
+// decl.C99\Pass_enum_def_decl.h
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined enum
+
+enum good_test {
+	x_factor = 1
+} y;
+
+// ringing the changes on extern
+extern enum good_test x1;
+extern const enum good_test x2;
+extern volatile enum good_test x3;
+extern const volatile enum good_test x4;
+extern volatile const enum good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static enum good_test x6;
+static volatile enum good_test x7;
+static const volatile enum good_test x8;
+static volatile const enum good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern enum good_test x10;
+volatile extern enum good_test x11;
+const extern volatile enum good_test x12;
+const volatile extern enum good_test x13;
+volatile extern const enum good_test x14;
+volatile const extern enum good_test x15;
+volatile static enum good_test x16;
+const static volatile enum good_test x17;
+const volatile static enum good_test x18;
+volatile static const enum good_test x19;
+volatile const static enum good_test x20;
+
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local enum good_test x21;
+extern _Thread_Local const enum good_test x22;
+extern _Thread_Local volatile enum good_test x23;
+extern _Thread_Local const volatile enum good_test x24;
+extern _Thread_Local volatile const enum good_test x25;
+_Thread_Local extern enum good_test x26;
+_Thread_Local extern const enum good_test x27;
+_Thread_Local extern volatile enum good_test x28;
+_Thread_Local extern const volatile enum good_test x29;
+_Thread_Local extern volatile const enum good_test x30;
+
+// ringing the changes on _Thread_Local static
+static _Thread_Local enum good_test x31;
+static _Thread_Local const enum good_test x32;
+static _Thread_Local volatile enum good_test x33;
+static _Thread_Local const volatile enum good_test x34;
+static _Thread_Local volatile const enum good_test x35;
+_Thread_Local static enum good_test x36;
+_Thread_Local static const enum good_test x37;
+_Thread_Local static volatile enum good_test x38;
+_Thread_Local static const volatile enum good_test x39;
+_Thread_Local static volatile const enum good_test x40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local enum good_test x41;
+const extern _Thread_Local enum good_test x42;
+extern volatile _Thread_Local enum good_test x43;
+volatile extern _Thread_Local enum good_test x44;
+extern const _Thread_Local volatile enum good_test x45;
+extern const volatile _Thread_Local enum good_test x46;
+const extern _Thread_Local volatile enum good_test x47;
+const extern volatile _Thread_Local enum good_test x48;
+const volatile extern _Thread_Local enum good_test x49;
+extern volatile _Thread_Local const enum good_test x50;
+extern volatile const _Thread_Local enum good_test x51;
+volatile extern _Thread_Local const enum good_test x52;
+volatile extern const _Thread_Local enum good_test x53;
+volatile const extern _Thread_Local enum good_test x54;
+_Thread_Local const extern enum good_test x55;
+const _Thread_Local extern enum good_test x56;
+_Thread_Local volatile extern enum good_test x57;
+volatile _Thread_Local extern enum good_test x58;
+_Thread_Local const extern volatile enum good_test x59;
+_Thread_Local const volatile extern enum good_test x60;
+const _Thread_Local extern volatile enum good_test x61;
+const _Thread_Local volatile extern enum good_test x62;
+const volatile _Thread_Local extern enum good_test x63;
+_Thread_Local volatile extern const enum good_test x64;
+_Thread_Local volatile const extern enum good_test x65;
+volatile _Thread_Local extern const enum good_test x66;
+volatile _Thread_Local const extern enum good_test x67;
+volatile const _Thread_Local extern enum good_test x68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local enum good_test x69;
+const static _Thread_Local enum good_test x70;
+static volatile _Thread_Local enum good_test x71;
+volatile static _Thread_Local enum good_test x72;
+static const _Thread_Local volatile enum good_test x73;
+static const volatile _Thread_Local enum good_test x74;
+const static _Thread_Local volatile enum good_test x75;
+const static volatile _Thread_Local enum good_test x76;
+const volatile static _Thread_Local enum good_test x77;
+static volatile _Thread_Local const enum good_test x78;
+static volatile const _Thread_Local enum good_test x79;
+volatile static _Thread_Local const enum good_test x80;
+volatile static const _Thread_Local enum good_test x81;
+volatile const static _Thread_Local enum good_test x82;
+_Thread_Local const static enum good_test x83;
+const _Thread_Local static enum good_test x84;
+_Thread_Local volatile static enum good_test x85;
+volatile _Thread_Local static enum good_test x86;
+_Thread_Local const static volatile enum good_test x87;
+_Thread_Local const volatile static enum good_test x88;
+const _Thread_Local static volatile enum good_test x89;
+const _Thread_Local volatile static enum good_test x90;
+const volatile _Thread_Local static enum good_test x91;
+_Thread_Local volatile static const enum good_test x92;
+_Thread_Local volatile const static enum good_test x93;
+volatile _Thread_Local static const enum good_test x94;
+volatile _Thread_Local const static enum good_test x95;
+volatile const _Thread_Local static enum good_test x96;
+

Added: trunk/tests/zcc/decl.C99/Pass_enum_def_decl.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_enum_def_decl.hpp	                        (rev 0)
+++ trunk/tests/zcc/decl.C99/Pass_enum_def_decl.hpp	2011-03-26 12:03:55 UTC (rev 624)
@@ -0,0 +1,119 @@
+// decl.C99\Pass_enum_def_decl.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined enum
+
+enum good_test {
+	x_factor = 1
+} y;
+
+// ringing the changes on extern
+extern enum good_test x1;
+extern const enum good_test x2;
+extern volatile enum good_test x3;
+extern const volatile enum good_test x4;
+extern volatile const enum good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static enum good_test x6;
+static volatile enum good_test x7;
+static const volatile enum good_test x8;
+static volatile const enum good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern enum good_test x10;
+volatile extern enum good_test x11;
+const extern volatile enum good_test x12;
+const volatile extern enum good_test x13;
+volatile extern const enum good_test x14;
+volatile const extern enum good_test x15;
+volatile static enum good_test x16;
+const static volatile enum good_test x17;
+const volatile static enum good_test x18;
+volatile static const enum good_test x19;
+volatile const static enum good_test x20;
+
+// ringing the changes on thread_local extern
+extern thread_local enum good_test x21;
+extern thread_local const enum good_test x22;
+extern thread_local volatile enum good_test x23;
+extern thread_local const volatile enum good_test x24;
+extern thread_local volatile const enum good_test x25;
+thread_local extern enum good_test x26;
+thread_local extern const enum good_test x27;
+thread_local extern volatile enum good_test x28;
+thread_local extern const volatile enum good_test x29;
+thread_local extern volatile const enum good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local enum good_test x31;
+static thread_local const enum good_test x32;
+static thread_local volatile enum good_test x33;
+static thread_local const volatile enum good_test x34;
+static thread_local volatile const enum good_test x35;
+thread_local static enum good_test x36;
+thread_local static const enum good_test x37;
+thread_local static volatile enum good_test x38;
+thread_local static const volatile enum good_test x39;
+thread_local static volatile const enum good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local enum good_test x41;
+const extern thread_local enum good_test x42;
+extern volatile thread_local enum good_test x43;
+volatile extern thread_local enum good_test x44;
+extern const thread_local volatile enum good_test x45;
+extern const volatile thread_local enum good_test x46;
+const extern thread_local volatile enum good_test x47;
+const extern volatile thread_local enum good_test x48;
+const volatile extern thread_local enum good_test x49;
+extern volatile thread_local const enum good_test x50;
+extern volatile const thread_local enum good_test x51;
+volatile extern thread_local const enum good_test x52;
+volatile extern const thread_local enum good_test x53;
+volatile const extern thread_local enum good_test x54;
+thread_local const extern enum good_test x55;
+const thread_local extern enum good_test x56;
+thread_local volatile extern enum good_test x57;
+volatile thread_local extern enum good_test x58;
+thread_local const extern volatile enum good_test x59;
+thread_local const volatile extern enum good_test x60;
+const thread_local extern volatile enum good_test x61;
+const thread_local volatile extern enum good_test x62;
+const volatile thread_local extern enum good_test x63;
+thread_local volatile extern const enum good_test x64;
+thread_local volatile const extern enum good_test x65;
+volatile thread_local extern const enum good_test x66;
+volatile thread_local const extern enum good_test x67;
+volatile const thread_local extern enum good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local enum good_test x69;
+const static thread_local enum good_test x70;
+static volatile thread_local enum good_test x71;
+volatile static thread_local enum good_test x72;
+static const thread_local volatile enum good_test x73;
+static const volatile thread_local enum good_test x74;
+const static thread_local volatile enum good_test x75;
+const static volatile thread_local enum good_test x76;
+const volatile static thread_local enum good_test x77;
+static volatile thread_local const enum good_test x78;
+static volatile const thread_local enum good_test x79;
+volatile static thread_local const enum good_test x80;
+volatile static const thread_local enum good_test x81;
+volatile const static thread_local enum good_test x82;
+thread_local const static enum good_test x83;
+const thread_local static enum good_test x84;
+thread_local volatile static enum good_test x85;
+volatile thread_local static enum good_test x86;
+thread_local const static volatile enum good_test x87;
+thread_local const volatile static enum good_test x88;
+const thread_local static volatile enum good_test x89;
+const thread_local volatile static enum good_test x90;
+const volatile thread_local static enum good_test x91;
+thread_local volatile static const enum good_test x92;
+thread_local volatile const static enum good_test x93;
+volatile thread_local static const enum good_test x94;
+volatile thread_local const static enum good_test x95;
+volatile const thread_local static enum good_test x96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_union_def_decl.h
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_union_def_decl.h	2011-03-24 23:53:08 UTC (rev 623)
+++ trunk/tests/zcc/decl.C99/Pass_union_def_decl.h	2011-03-26 12:03:55 UTC (rev 624)
@@ -1,20 +1,119 @@
 // decl.C99\Pass_union_def_decl.h
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined union
-// (C)2010 Kenneth Boyd, license: MIT.txt
 
 union good_test {
-	int x_factor;
-} y;
+	int x_factor
+};
 
-// exercise some declarations
-union good_test x1;
-const union good_test c1;
-union good_test const c2;
-volatile union good_test v1;
-union good_test volatile v2;
-const volatile union good_test cv1;
-volatile const union good_test cv2;
-const union good_test volatile cv3;
-volatile union good_test const cv4;
-union good_test const volatile cv5;
-union good_test volatile const cv6;
+// ringing the changes on extern
+extern union good_test x1;
+extern const union good_test x2;
+extern volatile union good_test x3;
+extern const volatile union good_test x4;
+extern volatile const union good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static union good_test x6;
+static volatile union good_test x7;
+static const volatile union good_test x8;
+static volatile const union good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern union good_test x10;
+volatile extern union good_test x11;
+const extern volatile union good_test x12;
+const volatile extern union good_test x13;
+volatile extern const union good_test x14;
+volatile const extern union good_test x15;
+volatile static union good_test x16;
+const static volatile union good_test x17;
+const volatile static union good_test x18;
+volatile static const union good_test x19;
+volatile const static union good_test x20;
+
+// ringing the changes on _Thread_Local extern
+extern _Thread_Local union good_test x21;
+extern _Thread_Local const union good_test x22;
+extern _Thread_Local volatile union good_test x23;
+extern _Thread_Local const volatile union good_test x24;
+extern _Thread_Local volatile const union good_test x25;
+_Thread_Local extern union good_test x26;
+_Thread_Local extern const union good_test x27;
+_Thread_Local extern volatile union good_test x28;
+_Thread_Local extern const volatile union good_test x29;
+_Thread_Local extern volatile const union good_test x30;
+
+// ringing the changes on _Thread_Local static
+static _Thread_Local union good_test x31;
+static _Thread_Local const union good_test x32;
+static _Thread_Local volatile union good_test x33;
+static _Thread_Local const volatile union good_test x34;
+static _Thread_Local volatile const union good_test x35;
+_Thread_Local static union good_test x36;
+_Thread_Local static const union good_test x37;
+_Thread_Local static volatile union good_test x38;
+_Thread_Local static const volatile union good_test x39;
+_Thread_Local static volatile const union good_test x40;
+
+// _Thread_Local extern not in first two postions is deprecated, but legal
+extern const _Thread_Local union good_test x41;
+const extern _Thread_Local union good_test x42;
+extern volatile _Thread_Local union good_test x43;
+volatile extern _Thread_Local union good_test x44;
+extern const _Thread_Local volatile union good_test x45;
+extern const volatile _Thread_Local union good_test x46;
+const extern _Thread_Local volatile union good_test x47;
+const extern volatile _Thread_Local union good_test x48;
+const volatile extern _Thread_Local union good_test x49;
+extern volatile _Thread_Local const union good_test x50;
+extern volatile const _Thread_Local union good_test x51;
+volatile extern _Thread_Local const union good_test x52;
+volatile extern const _Thread_Local union good_test x53;
+volatile const extern _Thread_Local union good_test x54;
+_Thread_Local const extern union good_test x55;
+const _Thread_Local extern union good_test x56;
+_Thread_Local volatile extern union good_test x57;
+volatile _Thread_Local extern union good_test x58;
+_Thread_Local const extern volatile union good_test x59;
+_Thread_Local const volatile extern union good_test x60;
+const _Thread_Local extern volatile union good_test x61;
+const _Thread_Local volatile extern union good_test x62;
+const volatile _Thread_Local extern union good_test x63;
+_Thread_Local volatile extern const union good_test x64;
+_Thread_Local volatile const extern union good_test x65;
+volatile _Thread_Local extern const union good_test x66;
+volatile _Thread_Local const extern union good_test x67;
+volatile const _Thread_Local extern union good_test x68;
+
+// _Thread_Local static not in first two postions is deprecated, but legal
+static const _Thread_Local union good_test x69;
+const static _Thread_Local union good_test x70;
+static volatile _Thread_Local union good_test x71;
+volatile static _Thread_Local union good_test x72;
+static const _Thread_Local volatile union good_test x73;
+static const volatile _Thread_Local union good_test x74;
+const static _Thread_Local volatile union good_test x75;
+const static volatile _Thread_Local union good_test x76;
+const volatile static _Thread_Local union good_test x77;
+static volatile _Thread_Local const union good_test x78;
+static volatile const _Thread_Local union good_test x79;
+volatile static _Thread_Local const union good_test x80;
+volatile static const _Thread_Local union good_test x81;
+volatile const static _Thread_Local union good_test x82;
+_Thread_Local const static union good_test x83;
+const _Thread_Local static union good_test x84;
+_Thread_Local volatile static union good_test x85;
+volatile _Thread_Local static union good_test x86;
+_Thread_Local const static volatile union good_test x87;
+_Thread_Local const volatile static union good_test x88;
+const _Thread_Local static volatile union good_test x89;
+const _Thread_Local volatile static union good_test x90;
+const volatile _Thread_Local static union good_test x91;
+_Thread_Local volatile static const union good_test x92;
+_Thread_Local volatile const static union good_test x93;
+volatile _Thread_Local static const union good_test x94;
+volatile _Thread_Local const static union good_test x95;
+volatile const _Thread_Local static union good_test x96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_union_def_decl.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_union_def_decl.hpp	2011-03-24 23:53:08 UTC (rev 623)
+++ trunk/tests/zcc/decl.C99/Pass_union_def_decl.hpp	2011-03-26 12:03:55 UTC (rev 624)
@@ -1,21 +1,119 @@
 // decl.C99\Pass_union_def_decl.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
 // using singly defined union
-// (C)2010 Kenneth Boyd, license: MIT.txt
 
 union good_test {
-	int x_factor;
-} y;
+	int x_factor
+};
 
-// exercise some declarations
-union good_test x1;
-const union good_test c1;
-union good_test const c2;
-volatile union good_test v1;
-union good_test volatile v2;
-const volatile union good_test cv1;
-volatile const union good_test cv2;
-const union good_test volatile cv3;
-volatile union good_test const cv4;
-union good_test const volatile cv5;
-union good_test volatile const cv6;
+// ringing the changes on extern
+extern union good_test x1;
+extern const union good_test x2;
+extern volatile union good_test x3;
+extern const volatile union good_test x4;
+extern volatile const union good_test x5;
 
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static union good_test x6;
+static volatile union good_test x7;
+static const volatile union good_test x8;
+static volatile const union good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern union good_test x10;
+volatile extern union good_test x11;
+const extern volatile union good_test x12;
+const volatile extern union good_test x13;
+volatile extern const union good_test x14;
+volatile const extern union good_test x15;
+volatile static union good_test x16;
+const static volatile union good_test x17;
+const volatile static union good_test x18;
+volatile static const union good_test x19;
+volatile const static union good_test x20;
+
+// ringing the changes on thread_local extern
+extern thread_local union good_test x21;
+extern thread_local const union good_test x22;
+extern thread_local volatile union good_test x23;
+extern thread_local const volatile union good_test x24;
+extern thread_local volatile const union good_test x25;
+thread_local extern union good_test x26;
+thread_local extern const union good_test x27;
+thread_local extern volatile union good_test x28;
+thread_local extern const volatile union good_test x29;
+thread_local extern volatile const union good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local union good_test x31;
+static thread_local const union good_test x32;
+static thread_local volatile union good_test x33;
+static thread_local const volatile union good_test x34;
+static thread_local volatile const union good_test x35;
+thread_local static union good_test x36;
+thread_local static const union good_test x37;
+thread_local static volatile union good_test x38;
+thread_local static const volatile union good_test x39;
+thread_local static volatile const union good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local union good_test x41;
+const extern thread_local union good_test x42;
+extern volatile thread_local union good_test x43;
+volatile extern thread_local union good_test x44;
+extern const thread_local volatile union good_test x45;
+extern const volatile thread_local union good_test x46;
+const extern thread_local volatile union good_test x47;
+const extern volatile thread_local union good_test x48;
+const volatile extern thread_local union good_test x49;
+extern volatile thread_local const union good_test x50;
+extern volatile const thread_local union good_test x51;
+volatile extern thread_local const union good_test x52;
+volatile extern const thread_local union good_test x53;
+volatile const extern thread_local union good_test x54;
+thread_local const extern union good_test x55;
+const thread_local extern union good_test x56;
+thread_local volatile extern union good_test x57;
+volatile thread_local extern union good_test x58;
+thread_local const extern volatile union good_test x59;
+thread_local const volatile extern union good_test x60;
+const thread_local extern volatile union good_test x61;
+const thread_local volatile extern union good_test x62;
+const volatile thread_local extern union good_test x63;
+thread_local volatile extern const union good_test x64;
+thread_local volatile const extern union good_test x65;
+volatile thread_local extern const union good_test x66;
+volatile thread_local const extern union good_test x67;
+volatile const thread_local extern union good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local union good_test x69;
+const static thread_local union good_test x70;
+static volatile thread_local union good_test x71;
+volatile static thread_local union good_test x72;
+static const thread_local volatile union good_test x73;
+static const volatile thread_local union good_test x74;
+const static thread_local volatile union good_test x75;
+const static volatile thread_local union good_test x76;
+const volatile static thread_local union good_test x77;
+static volatile thread_local const union good_test x78;
+static volatile const thread_local union good_test x79;
+volatile static thread_local const union good_test x80;
+volatile static const thread_local union good_test x81;
+volatile const static thread_local union good_test x82;
+thread_local const static union good_test x83;
+const thread_local static union good_test x84;
+thread_local volatile static union good_test x85;
+volatile thread_local static union good_test x86;
+thread_local const static volatile union good_test x87;
+thread_local const volatile static union good_test x88;
+const thread_local static volatile union good_test x89;
+const thread_local volatile static union good_test x90;
+const volatile thread_local static union good_test x91;
+thread_local volatile static const union good_test x92;
+thread_local volatile const static union good_test x93;
+volatile thread_local static const union good_test x94;
+volatile thread_local const static union good_test x95;
+volatile const thread_local static union good_test x96;
+

Added: trunk/tests/zcc.in/decl.C99/Pass_enum_def_decl.in
===================================================================
--- trunk/tests/zcc.in/decl.C99/Pass_enum_def_decl.in	                        (rev 0)
+++ trunk/tests/zcc.in/decl.C99/Pass_enum_def_decl.in	2011-03-26 12:03:55 UTC (rev 624)
@@ -0,0 +1,120 @@
+SUFFIXES h hpp
+OBJECTLIKE_MACRO THREAD_LOCAL _Thread_Local thread_local
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined enum
+
+enum good_test {
+	x_factor = 1
+} y;
+
+// ringing the changes on extern
+extern enum good_test x1;
+extern const enum good_test x2;
+extern volatile enum good_test x3;
+extern const volatile enum good_test x4;
+extern volatile const enum good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static enum good_test x6;
+static volatile enum good_test x7;
+static const volatile enum good_test x8;
+static volatile const enum good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern enum good_test x10;
+volatile extern enum good_test x11;
+const extern volatile enum good_test x12;
+const volatile extern enum good_test x13;
+volatile extern const enum good_test x14;
+volatile const extern enum good_test x15;
+volatile static enum good_test x16;
+const static volatile enum good_test x17;
+const volatile static enum good_test x18;
+volatile static const enum good_test x19;
+volatile const static enum good_test x20;
+
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL enum good_test x21;
+extern THREAD_LOCAL const enum good_test x22;
+extern THREAD_LOCAL volatile enum good_test x23;
+extern THREAD_LOCAL const volatile enum good_test x24;
+extern THREAD_LOCAL volatile const enum good_test x25;
+THREAD_LOCAL extern enum good_test x26;
+THREAD_LOCAL extern const enum good_test x27;
+THREAD_LOCAL extern volatile enum good_test x28;
+THREAD_LOCAL extern const volatile enum good_test x29;
+THREAD_LOCAL extern volatile const enum good_test x30;
+
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL enum good_test x31;
+static THREAD_LOCAL const enum good_test x32;
+static THREAD_LOCAL volatile enum good_test x33;
+static THREAD_LOCAL const volatile enum good_test x34;
+static THREAD_LOCAL volatile const enum good_test x35;
+THREAD_LOCAL static enum good_test x36;
+THREAD_LOCAL static const enum good_test x37;
+THREAD_LOCAL static volatile enum good_test x38;
+THREAD_LOCAL static const volatile enum good_test x39;
+THREAD_LOCAL static volatile const enum good_test x40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL enum good_test x41;
+const extern THREAD_LOCAL enum good_test x42;
+extern volatile THREAD_LOCAL enum good_test x43;
+volatile extern THREAD_LOCAL enum good_test x44;
+extern const THREAD_LOCAL volatile enum good_test x45;
+extern const volatile THREAD_LOCAL enum good_test x46;
+const extern THREAD_LOCAL volatile enum good_test x47;
+const extern volatile THREAD_LOCAL enum good_test x48;
+const volatile extern THREAD_LOCAL enum good_test x49;
+extern volatile THREAD_LOCAL const enum good_test x50;
+extern volatile const THREAD_LOCAL enum good_test x51;
+volatile extern THREAD_LOCAL const enum good_test x52;
+volatile extern const THREAD_LOCAL enum good_test x53;
+volatile const extern THREAD_LOCAL enum good_test x54;
+THREAD_LOCAL const extern enum good_test x55;
+const THREAD_LOCAL extern enum good_test x56;
+THREAD_LOCAL volatile extern enum good_test x57;
+volatile THREAD_LOCAL extern enum good_test x58;
+THREAD_LOCAL const extern volatile enum good_test x59;
+THREAD_LOCAL const volatile extern enum good_test x60;
+const THREAD_LOCAL extern volatile enum good_test x61;
+const THREAD_LOCAL volatile extern enum good_test x62;
+const volatile THREAD_LOCAL extern enum good_test x63;
+THREAD_LOCAL volatile extern const enum good_test x64;
+THREAD_LOCAL volatile const extern enum good_test x65;
+volatile THREAD_LOCAL extern const enum good_test x66;
+volatile THREAD_LOCAL const extern enum good_test x67;
+volatile const THREAD_LOCAL extern enum good_test x68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL enum good_test x69;
+const static THREAD_LOCAL enum good_test x70;
+static volatile THREAD_LOCAL enum good_test x71;
+volatile static THREAD_LOCAL enum good_test x72;
+static const THREAD_LOCAL volatile enum good_test x73;
+static const volatile THREAD_LOCAL enum good_test x74;
+const static THREAD_LOCAL volatile enum good_test x75;
+const static volatile THREAD_LOCAL enum good_test x76;
+const volatile static THREAD_LOCAL enum good_test x77;
+static volatile THREAD_LOCAL const enum good_test x78;
+static volatile const THREAD_LOCAL enum good_test x79;
+volatile static THREAD_LOCAL const enum good_test x80;
+volatile static const THREAD_LOCAL enum good_test x81;
+volatile const static THREAD_LOCAL enum good_test x82;
+THREAD_LOCAL const static enum good_test x83;
+const THREAD_LOCAL static enum good_test x84;
+THREAD_LOCAL volatile static enum good_test x85;
+volatile THREAD_LOCAL static enum good_test x86;
+THREAD_LOCAL const static volatile enum good_test x87;
+THREAD_LOCAL const volatile static enum good_test x88;
+const THREAD_LOCAL static volatile enum good_test x89;
+const THREAD_LOCAL volatile static enum good_test x90;
+const volatile THREAD_LOCAL static enum good_test x91;
+THREAD_LOCAL volatile static const enum good_test x92;
+THREAD_LOCAL volatile const static enum good_test x93;
+volatile THREAD_LOCAL static const enum good_test x94;
+volatile THREAD_LOCAL const static enum good_test x95;
+volatile const THREAD_LOCAL static enum good_test x96;
+

Added: trunk/tests/zcc.in/decl.C99/Pass_union_def_decl.in
===================================================================
--- trunk/tests/zcc.in/decl.C99/Pass_union_def_decl.in	                        (rev 0)
+++ trunk/tests/zcc.in/decl.C99/Pass_union_def_decl.in	2011-03-26 12:03:55 UTC (rev 624)
@@ -0,0 +1,120 @@
+SUFFIXES h hpp
+OBJECTLIKE_MACRO THREAD_LOCAL _Thread_Local thread_local
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined union
+
+union good_test {
+	int x_factor
+};
+
+// ringing the changes on extern
+extern union good_test x1;
+extern const union good_test x2;
+extern volatile union good_test x3;
+extern const volatile union good_test x4;
+extern volatile const union good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static union good_test x6;
+static volatile union good_test x7;
+static const volatile union good_test x8;
+static volatile const union good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern union good_test x10;
+volatile extern union good_test x11;
+const extern volatile union good_test x12;
+const volatile extern union good_test x13;
+volatile extern const union good_test x14;
+volatile const extern union good_test x15;
+volatile static union good_test x16;
+const static volatile union good_test x17;
+const volatile static union good_test x18;
+volatile static const union good_test x19;
+volatile const static union good_test x20;
+
+// ringing the changes on THREAD_LOCAL extern
+extern THREAD_LOCAL union good_test x21;
+extern THREAD_LOCAL const union good_test x22;
+extern THREAD_LOCAL volatile union good_test x23;
+extern THREAD_LOCAL const volatile union good_test x24;
+extern THREAD_LOCAL volatile const union good_test x25;
+THREAD_LOCAL extern union good_test x26;
+THREAD_LOCAL extern const union good_test x27;
+THREAD_LOCAL extern volatile union good_test x28;
+THREAD_LOCAL extern const volatile union good_test x29;
+THREAD_LOCAL extern volatile const union good_test x30;
+
+// ringing the changes on THREAD_LOCAL static
+static THREAD_LOCAL union good_test x31;
+static THREAD_LOCAL const union good_test x32;
+static THREAD_LOCAL volatile union good_test x33;
+static THREAD_LOCAL const volatile union good_test x34;
+static THREAD_LOCAL volatile const union good_test x35;
+THREAD_LOCAL static union good_test x36;
+THREAD_LOCAL static const union good_test x37;
+THREAD_LOCAL static volatile union good_test x38;
+THREAD_LOCAL static const volatile union good_test x39;
+THREAD_LOCAL static volatile const union good_test x40;
+
+// THREAD_LOCAL extern not in first two postions is deprecated, but legal
+extern const THREAD_LOCAL union good_test x41;
+const extern THREAD_LOCAL union good_test x42;
+extern volatile THREAD_LOCAL union good_test x43;
+volatile extern THREAD_LOCAL union good_test x44;
+extern const THREAD_LOCAL volatile union good_test x45;
+extern const volatile THREAD_LOCAL union good_test x46;
+const extern THREAD_LOCAL volatile union good_test x47;
+const extern volatile THREAD_LOCAL union good_test x48;
+const volatile extern THREAD_LOCAL union good_test x49;
+extern volatile THREAD_LOCAL const union good_test x50;
+extern volatile const THREAD_LOCAL union good_test x51;
+volatile extern THREAD_LOCAL const union good_test x52;
+volatile extern const THREAD_LOCAL union good_test x53;
+volatile const extern THREAD_LOCAL union good_test x54;
+THREAD_LOCAL const extern union good_test x55;
+const THREAD_LOCAL extern union good_test x56;
+THREAD_LOCAL volatile extern union good_test x57;
+volatile THREAD_LOCAL extern union good_test x58;
+THREAD_LOCAL const extern volatile union good_test x59;
+THREAD_LOCAL const volatile extern union good_test x60;
+const THREAD_LOCAL extern volatile union good_test x61;
+const THREAD_LOCAL volatile extern union good_test x62;
+const volatile THREAD_LOCAL extern union good_test x63;
+THREAD_LOCAL volatile extern const union good_test x64;
+THREAD_LOCAL volatile const extern union good_test x65;
+volatile THREAD_LOCAL extern const union good_test x66;
+volatile THREAD_LOCAL const extern union good_test x67;
+volatile const THREAD_LOCAL extern union good_test x68;
+
+// THREAD_LOCAL static not in first two postions is deprecated, but legal
+static const THREAD_LOCAL union good_test x69;
+const static THREAD_LOCAL union good_test x70;
+static volatile THREAD_LOCAL union good_test x71;
+volatile static THREAD_LOCAL union good_test x72;
+static const THREAD_LOCAL volatile union good_test x73;
+static const volatile THREAD_LOCAL union good_test x74;
+const static THREAD_LOCAL volatile union good_test x75;
+const static volatile THREAD_LOCAL union good_test x76;
+const volatile static THREAD_LOCAL union good_test x77;
+static volatile THREAD_LOCAL const union good_test x78;
+static volatile const THREAD_LOCAL union good_test x79;
+volatile static THREAD_LOCAL const union good_test x80;
+volatile static const THREAD_LOCAL union good_test x81;
+volatile const static THREAD_LOCAL union good_test x82;
+THREAD_LOCAL const static union good_test x83;
+const THREAD_LOCAL static union good_test x84;
+THREAD_LOCAL volatile static union good_test x85;
+volatile THREAD_LOCAL static union good_test x86;
+THREAD_LOCAL const static volatile union good_test x87;
+THREAD_LOCAL const volatile static union good_test x88;
+const THREAD_LOCAL static volatile union good_test x89;
+const THREAD_LOCAL volatile static union good_test x90;
+const volatile THREAD_LOCAL static union good_test x91;
+THREAD_LOCAL volatile static const union good_test x92;
+THREAD_LOCAL volatile const static union good_test x93;
+volatile THREAD_LOCAL static const union good_test x94;
+volatile THREAD_LOCAL const static union good_test x95;
+volatile const THREAD_LOCAL static union good_test x96;
+

Modified: trunk/tools/decl_infile.py
===================================================================
--- trunk/tools/decl_infile.py	2011-03-24 23:53:08 UTC (rev 623)
+++ trunk/tools/decl_infile.py	2011-03-26 12:03:55 UTC (rev 624)
@@ -6,7 +6,7 @@
 
 # target files
 target_files = ['Pass_enum_def.in', 'Pass_struct_def.in', 'Pass_union_def.in']
-target_files2 = ['Pass_struct_def_decl.in']
+target_files2 = ['Pass_enum_def_decl.in', 'Pass_struct_def_decl.in', 'Pass_union_def_decl.in']
 
 invariant_header_lines = [
 'SUFFIXES h hpp\n'
@@ -17,12 +17,16 @@
 context = {	'Pass_enum_def.in':'// using singly defined enum\n',
 			'Pass_struct_def.in':'// using singly defined struct\n',
 			'Pass_union_def.in':'// using singly defined union\n',
-			'Pass_struct_def_decl.in':'// using singly defined struct\n'}
+			'Pass_enum_def_decl.in':'// using singly defined enum\n',
+			'Pass_struct_def_decl.in':'// using singly defined struct\n',
+			'Pass_union_def_decl.in':'// using singly defined union\n'}
 
 global_define = {	'Pass_enum_def.in':'\nenum good_test {\n\tx_factor = 1\n};\n\n',
 					'Pass_struct_def.in':'\nstruct good_test {\n\tint x_factor\n};\n\n',
 					'Pass_union_def.in':'\nunion good_test {\n\tint x_factor\n};\n\n',
-					'Pass_struct_def_decl.in':'\nstruct good_test {\n\tint x_factor\n} y;\n\n'}
+					'Pass_enum_def_decl.in':'\nenum good_test {\n\tx_factor = 1\n} y;\n\n',
+					'Pass_struct_def_decl.in':'\nstruct good_test {\n\tint x_factor\n} y;\n\n',
+					'Pass_union_def_decl.in':'\nunion good_test {\n\tint x_factor\n};\n\n'}
 
 section_comments = ['// ringing the changes on extern\n',
 "// ringing the changes on static\n// (don't test static const -- no chance to initialize before use)\n",
@@ -42,7 +46,8 @@
 	return "union good_test x"+i
 
 var_decl = {'Pass_enum_def.in':enum_decl, 'Pass_struct_def.in':struct_decl,
-			'Pass_union_def.in':union_decl, 'Pass_struct_def_decl.in':struct_decl}
+			'Pass_union_def.in':union_decl, 'Pass_enum_def_decl.in':enum_decl,
+			'Pass_struct_def_decl.in':struct_decl, 'Pass_union_def_decl.in':union_decl}
 
 def enum_def(i):
 	return 'enum good_test'+i+' { x_factor'+i+' = 1 } x_'+i



From zaimoni at mail.berlios.de  Sun Mar 27 07:59:31 2011
From: zaimoni at mail.berlios.de (zaimoni at mail.berlios.de)
Date: Sun, 27 Mar 2011 07:59:31 +0200
Subject: [Zcplusplus-commits] r625 - in trunk: tests/zcc/decl.C99 tools
Message-ID: <20110327055932.00C61480819@sheep.berlios.de>

Author: zaimoni
Date: 2011-03-27 07:59:31 +0200 (Sun, 27 Mar 2011)
New Revision: 625

Modified:
   trunk/tests/zcc/decl.C99/Pass_class_def.hpp
   trunk/tests/zcc/decl.C99/Pass_class_def_decl.hpp
   trunk/tools/POSIX.inc
Log:
test global-level parsing of thread_local for classes

Modified: trunk/tests/zcc/decl.C99/Pass_class_def.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_class_def.hpp	2011-03-26 12:03:55 UTC (rev 624)
+++ trunk/tests/zcc/decl.C99/Pass_class_def.hpp	2011-03-27 05:59:31 UTC (rev 625)
@@ -1,65 +1,231 @@
-// decl.C99\Pass_class_def.hpp
-// using singly defined struct
-// (C)2009,2010,2011 Kenneth Boyd, license: MIT.txt
-
-class good_test {
-	int x_factor;
-};
-
-// ringing the changes on extern
-extern struct good_test x1;
-extern const struct good_test x2;
-extern volatile struct good_test x3;
-extern const volatile struct good_test x4;
-extern volatile const struct good_test x5;
-
-// ringing the changes on static
-// (don't test static const -- no chance to initialize before use)
-static struct good_test x6;
-static volatile struct good_test x7;
-static const volatile struct good_test x8;
-static volatile const struct good_test x9;
-
-// extern/static not in first postion is deprecated, but legal
-const extern struct good_test x10;
-volatile extern struct good_test x11;
-const extern volatile struct good_test x12;
-const volatile extern struct good_test x13;
-volatile extern const struct good_test x14;
-volatile const extern struct good_test x15;
-
-volatile static struct good_test x16;
-const static volatile struct good_test x17;
-const volatile static struct good_test x18;
-volatile static const struct good_test x19;
-volatile const static struct good_test x20;
-
-// define-declares
-// ringing the changes on extern
-extern struct good_test2 { int x_factor2; } x21;
-extern const struct good_test3 { int x_factor3; } x22;
-extern volatile struct good_test4 { int x_factor4; } x23;
-extern const volatile struct good_test5 { int x_factor5; } x24;
-extern volatile const struct good_test6 { int x_factor6; } x25;
-
-// ringing the changes on static
-// (don't test static const -- no chance to initialize before use)
-static struct good_test7 { int x_factor7; } x26;
-static volatile struct good_test8 { int x_factor8; } x27;
-static const volatile struct good_test9 { int x_factor9; } x28;
-static volatile const struct good_test10 { int x_factor10; } x29;
-
-// extern/static not in first postion is deprecated, but legal
-const extern struct good_test11 { int x_factor11; } x30;
-volatile extern struct good_test12 { int x_factor12; } x31;
-const extern volatile struct good_test13 { int x_factor13; } x32;
-const volatile extern struct good_test14 { int x_factor14; } x33;
-volatile extern const struct good_test15 { int x_factor15; } x34;
-volatile const extern struct good_test16 { int x_factor16; } x35;
-
-volatile static struct good_test17 { int x_factor17; } x16;
-const static volatile struct good_test18 { int x_factor18; } x37;
-const volatile static struct good_test19 { int x_factor19; } x38;
-volatile static const struct good_test20 { int x_factor20; } x39;
-volatile const static struct good_test21 { int x_factor21; } x40;
-
+// decl.C99\Pass_class_def.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined class
+
+class good_test {
+	int x_factor
+};
+
+// ringing the changes on extern
+extern class good_test x1;
+extern const class good_test x2;
+extern volatile class good_test x3;
+extern const volatile class good_test x4;
+extern volatile const class good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static class good_test x6;
+static volatile class good_test x7;
+static const volatile class good_test x8;
+static volatile const class good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern class good_test x10;
+volatile extern class good_test x11;
+const extern volatile class good_test x12;
+const volatile extern class good_test x13;
+volatile extern const class good_test x14;
+volatile const extern class good_test x15;
+volatile static class good_test x16;
+const static volatile class good_test x17;
+const volatile static class good_test x18;
+volatile static const class good_test x19;
+volatile const static class good_test x20;
+
+// ringing the changes on thread_local extern
+extern thread_local class good_test x21;
+extern thread_local const class good_test x22;
+extern thread_local volatile class good_test x23;
+extern thread_local const volatile class good_test x24;
+extern thread_local volatile const class good_test x25;
+thread_local extern class good_test x26;
+thread_local extern const class good_test x27;
+thread_local extern volatile class good_test x28;
+thread_local extern const volatile class good_test x29;
+thread_local extern volatile const class good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local class good_test x31;
+static thread_local const class good_test x32;
+static thread_local volatile class good_test x33;
+static thread_local const volatile class good_test x34;
+static thread_local volatile const class good_test x35;
+thread_local static class good_test x36;
+thread_local static const class good_test x37;
+thread_local static volatile class good_test x38;
+thread_local static const volatile class good_test x39;
+thread_local static volatile const class good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local class good_test x41;
+const extern thread_local class good_test x42;
+extern volatile thread_local class good_test x43;
+volatile extern thread_local class good_test x44;
+extern const thread_local volatile class good_test x45;
+extern const volatile thread_local class good_test x46;
+const extern thread_local volatile class good_test x47;
+const extern volatile thread_local class good_test x48;
+const volatile extern thread_local class good_test x49;
+extern volatile thread_local const class good_test x50;
+extern volatile const thread_local class good_test x51;
+volatile extern thread_local const class good_test x52;
+volatile extern const thread_local class good_test x53;
+volatile const extern thread_local class good_test x54;
+thread_local const extern class good_test x55;
+const thread_local extern class good_test x56;
+thread_local volatile extern class good_test x57;
+volatile thread_local extern class good_test x58;
+thread_local const extern volatile class good_test x59;
+thread_local const volatile extern class good_test x60;
+const thread_local extern volatile class good_test x61;
+const thread_local volatile extern class good_test x62;
+const volatile thread_local extern class good_test x63;
+thread_local volatile extern const class good_test x64;
+thread_local volatile const extern class good_test x65;
+volatile thread_local extern const class good_test x66;
+volatile thread_local const extern class good_test x67;
+volatile const thread_local extern class good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local class good_test x69;
+const static thread_local class good_test x70;
+static volatile thread_local class good_test x71;
+volatile static thread_local class good_test x72;
+static const thread_local volatile class good_test x73;
+static const volatile thread_local class good_test x74;
+const static thread_local volatile class good_test x75;
+const static volatile thread_local class good_test x76;
+const volatile static thread_local class good_test x77;
+static volatile thread_local const class good_test x78;
+static volatile const thread_local class good_test x79;
+volatile static thread_local const class good_test x80;
+volatile static const thread_local class good_test x81;
+volatile const static thread_local class good_test x82;
+thread_local const static class good_test x83;
+const thread_local static class good_test x84;
+thread_local volatile static class good_test x85;
+volatile thread_local static class good_test x86;
+thread_local const static volatile class good_test x87;
+thread_local const volatile static class good_test x88;
+const thread_local static volatile class good_test x89;
+const thread_local volatile static class good_test x90;
+const volatile thread_local static class good_test x91;
+thread_local volatile static const class good_test x92;
+thread_local volatile const static class good_test x93;
+volatile thread_local static const class good_test x94;
+volatile thread_local const static class good_test x95;
+volatile const thread_local static class good_test x96;
+
+// define-declares
+// ringing the changes on extern
+extern class good_test1 { int x_factor1; } x_1;
+extern const class good_test2 { int x_factor2; } x_2;
+extern volatile class good_test3 { int x_factor3; } x_3;
+extern const volatile class good_test4 { int x_factor4; } x_4;
+extern volatile const class good_test5 { int x_factor5; } x_5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static class good_test6 { int x_factor6; } x_6;
+static volatile class good_test7 { int x_factor7; } x_7;
+static const volatile class good_test8 { int x_factor8; } x_8;
+static volatile const class good_test9 { int x_factor9; } x_9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern class good_test10 { int x_factor10; } x_10;
+volatile extern class good_test11 { int x_factor11; } x_11;
+const extern volatile class good_test12 { int x_factor12; } x_12;
+const volatile extern class good_test13 { int x_factor13; } x_13;
+volatile extern const class good_test14 { int x_factor14; } x_14;
+volatile const extern class good_test15 { int x_factor15; } x_15;
+volatile static class good_test16 { int x_factor16; } x_16;
+const static volatile class good_test17 { int x_factor17; } x_17;
+const volatile static class good_test18 { int x_factor18; } x_18;
+volatile static const class good_test19 { int x_factor19; } x_19;
+volatile const static class good_test20 { int x_factor20; } x_20;
+
+// ringing the changes on thread_local extern
+extern thread_local class good_test21 { int x_factor21; } x_21;
+extern thread_local const class good_test22 { int x_factor22; } x_22;
+extern thread_local volatile class good_test23 { int x_factor23; } x_23;
+extern thread_local const volatile class good_test24 { int x_factor24; } x_24;
+extern thread_local volatile const class good_test25 { int x_factor25; } x_25;
+thread_local extern class good_test26 { int x_factor26; } x_26;
+thread_local extern const class good_test27 { int x_factor27; } x_27;
+thread_local extern volatile class good_test28 { int x_factor28; } x_28;
+thread_local extern const volatile class good_test29 { int x_factor29; } x_29;
+thread_local extern volatile const class good_test30 { int x_factor30; } x_30;
+
+// ringing the changes on thread_local static
+static thread_local class good_test31 { int x_factor31; } x_31;
+static thread_local const class good_test32 { int x_factor32; } x_32;
+static thread_local volatile class good_test33 { int x_factor33; } x_33;
+static thread_local const volatile class good_test34 { int x_factor34; } x_34;
+static thread_local volatile const class good_test35 { int x_factor35; } x_35;
+thread_local static class good_test36 { int x_factor36; } x_36;
+thread_local static const class good_test37 { int x_factor37; } x_37;
+thread_local static volatile class good_test38 { int x_factor38; } x_38;
+thread_local static const volatile class good_test39 { int x_factor39; } x_39;
+thread_local static volatile const class good_test40 { int x_factor40; } x_40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local class good_test41 { int x_factor41; } x_41;
+const extern thread_local class good_test42 { int x_factor42; } x_42;
+extern volatile thread_local class good_test43 { int x_factor43; } x_43;
+volatile extern thread_local class good_test44 { int x_factor44; } x_44;
+extern const thread_local volatile class good_test45 { int x_factor45; } x_45;
+extern const volatile thread_local class good_test46 { int x_factor46; } x_46;
+const extern thread_local volatile class good_test47 { int x_factor47; } x_47;
+const extern volatile thread_local class good_test48 { int x_factor48; } x_48;
+const volatile extern thread_local class good_test49 { int x_factor49; } x_49;
+extern volatile thread_local const class good_test50 { int x_factor50; } x_50;
+extern volatile const thread_local class good_test51 { int x_factor51; } x_51;
+volatile extern thread_local const class good_test52 { int x_factor52; } x_52;
+volatile extern const thread_local class good_test53 { int x_factor53; } x_53;
+volatile const extern thread_local class good_test54 { int x_factor54; } x_54;
+thread_local const extern class good_test55 { int x_factor55; } x_55;
+const thread_local extern class good_test56 { int x_factor56; } x_56;
+thread_local volatile extern class good_test57 { int x_factor57; } x_57;
+volatile thread_local extern class good_test58 { int x_factor58; } x_58;
+thread_local const extern volatile class good_test59 { int x_factor59; } x_59;
+thread_local const volatile extern class good_test60 { int x_factor60; } x_60;
+const thread_local extern volatile class good_test61 { int x_factor61; } x_61;
+const thread_local volatile extern class good_test62 { int x_factor62; } x_62;
+const volatile thread_local extern class good_test63 { int x_factor63; } x_63;
+thread_local volatile extern const class good_test64 { int x_factor64; } x_64;
+thread_local volatile const extern class good_test65 { int x_factor65; } x_65;
+volatile thread_local extern const class good_test66 { int x_factor66; } x_66;
+volatile thread_local const extern class good_test67 { int x_factor67; } x_67;
+volatile const thread_local extern class good_test68 { int x_factor68; } x_68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local class good_test69 { int x_factor69; } x_69;
+const static thread_local class good_test70 { int x_factor70; } x_70;
+static volatile thread_local class good_test71 { int x_factor71; } x_71;
+volatile static thread_local class good_test72 { int x_factor72; } x_72;
+static const thread_local volatile class good_test73 { int x_factor73; } x_73;
+static const volatile thread_local class good_test74 { int x_factor74; } x_74;
+const static thread_local volatile class good_test75 { int x_factor75; } x_75;
+const static volatile thread_local class good_test76 { int x_factor76; } x_76;
+const volatile static thread_local class good_test77 { int x_factor77; } x_77;
+static volatile thread_local const class good_test78 { int x_factor78; } x_78;
+static volatile const thread_local class good_test79 { int x_factor79; } x_79;
+volatile static thread_local const class good_test80 { int x_factor80; } x_80;
+volatile static const thread_local class good_test81 { int x_factor81; } x_81;
+volatile const static thread_local class good_test82 { int x_factor82; } x_82;
+thread_local const static class good_test83 { int x_factor83; } x_83;
+const thread_local static class good_test84 { int x_factor84; } x_84;
+thread_local volatile static class good_test85 { int x_factor85; } x_85;
+volatile thread_local static class good_test86 { int x_factor86; } x_86;
+thread_local const static volatile class good_test87 { int x_factor87; } x_87;
+thread_local const volatile static class good_test88 { int x_factor88; } x_88;
+const thread_local static volatile class good_test89 { int x_factor89; } x_89;
+const thread_local volatile static class good_test90 { int x_factor90; } x_90;
+const volatile thread_local static class good_test91 { int x_factor91; } x_91;
+thread_local volatile static const class good_test92 { int x_factor92; } x_92;
+thread_local volatile const static class good_test93 { int x_factor93; } x_93;
+volatile thread_local static const class good_test94 { int x_factor94; } x_94;
+volatile thread_local const static class good_test95 { int x_factor95; } x_95;
+volatile const thread_local static class good_test96 { int x_factor96; } x_96;
+

Modified: trunk/tests/zcc/decl.C99/Pass_class_def_decl.hpp
===================================================================
--- trunk/tests/zcc/decl.C99/Pass_class_def_decl.hpp	2011-03-26 12:03:55 UTC (rev 624)
+++ trunk/tests/zcc/decl.C99/Pass_class_def_decl.hpp	2011-03-27 05:59:31 UTC (rev 625)
@@ -1,20 +1,119 @@
-// decl.C99\Pass_class_def_decl.hpp
-// using singly defined struct
-// (C)2010 Kenneth Boyd, license: MIT.txt
-
-class good_test {
-	int x_factor;
-} y;
-
-// exercise some declarations
-class good_test x1;
-const class good_test c1;
-class good_test const c2;
-volatile class good_test v1;
-class good_test volatile v2;
-const volatile class good_test cv1;
-volatile const class good_test cv2;
-const class good_test volatile cv3;
-volatile class good_test const cv4;
-class good_test const volatile cv5;
-class good_test volatile const cv6;
+// decl.C99\Pass_class_def_decl.hpp
+// (C)2009,2011 Kenneth Boyd, license: MIT.txt
+// using singly defined class
+
+class good_test {
+	int x_factor
+} y;
+
+// ringing the changes on extern
+extern class good_test x1;
+extern const class good_test x2;
+extern volatile class good_test x3;
+extern const volatile class good_test x4;
+extern volatile const class good_test x5;
+
+// ringing the changes on static
+// (don't test static const -- no chance to initialize before use)
+static class good_test x6;
+static volatile class good_test x7;
+static const volatile class good_test x8;
+static volatile const class good_test x9;
+
+// extern/static not in first postion is deprecated, but legal
+const extern class good_test x10;
+volatile extern class good_test x11;
+const extern volatile class good_test x12;
+const volatile extern class good_test x13;
+volatile extern const class good_test x14;
+volatile const extern class good_test x15;
+volatile static class good_test x16;
+const static volatile class good_test x17;
+const volatile static class good_test x18;
+volatile static const class good_test x19;
+volatile const static class good_test x20;
+
+// ringing the changes on thread_local extern
+extern thread_local class good_test x21;
+extern thread_local const class good_test x22;
+extern thread_local volatile class good_test x23;
+extern thread_local const volatile class good_test x24;
+extern thread_local volatile const class good_test x25;
+thread_local extern class good_test x26;
+thread_local extern const class good_test x27;
+thread_local extern volatile class good_test x28;
+thread_local extern const volatile class good_test x29;
+thread_local extern volatile const class good_test x30;
+
+// ringing the changes on thread_local static
+static thread_local class good_test x31;
+static thread_local const class good_test x32;
+static thread_local volatile class good_test x33;
+static thread_local const volatile class good_test x34;
+static thread_local volatile const class good_test x35;
+thread_local static class good_test x36;
+thread_local static const class good_test x37;
+thread_local static volatile class good_test x38;
+thread_local static const volatile class good_test x39;
+thread_local static volatile const class good_test x40;
+
+// thread_local extern not in first two postions is deprecated, but legal
+extern const thread_local class good_test x41;
+const extern thread_local class good_test x42;
+extern volatile thread_local class good_test x43;
+volatile extern thread_local class good_test x44;
+extern const thread_local volatile class good_test x45;
+extern const volatile thread_local class good_test x46;
+const extern thread_local volatile class good_test x47;
+const extern volatile thread_local class good_test x48;
+const volatile extern thread_local class good_test x49;
+extern volatile thread_local const class good_test x50;
+extern volatile const thread_local class good_test x51;
+volatile extern thread_local const class good_test x52;
+volatile extern const thread_local class good_test x53;
+volatile const extern thread_local class good_test x54;
+thread_local const extern class good_test x55;
+const thread_local extern class good_test x56;
+thread_local volatile extern class good_test x57;
+volatile thread_local extern class good_test x58;
+thread_local const extern volatile class good_test x59;
+thread_local const volatile extern class good_test x60;
+const thread_local extern volatile class good_test x61;
+const thread_local volatile extern class good_test x62;
+const volatile thread_local extern class good_test x63;
+thread_local volatile extern const class good_test x64;
+thread_local volatile const extern class good_test x65;
+volatile thread_local extern const class good_test x66;
+volatile thread_local const extern class good_test x67;
+volatile const thread_local extern class good_test x68;
+
+// thread_local static not in first two postions is deprecated, but legal
+static const thread_local class good_test x69;
+const static thread_local class good_test x70;
+static volatile thread_local class good_test x71;
+volatile static thread_local class good_test x72;
+static const thread_local volatile class good_test x73;
+static const volatile thread_local class good_test x74;
+const static thread_local volatile class good_test x75;
+const static volatile thread_local class good_test x76;
+const volatile static thread_local class good_test x77;
+static volatile thread_local const class good_test x78;
+static volatile const thread_local class good_test x79;
+volatile static thread_local const class good_test x80;
+volatile static const thread_local class good_test x81;
+volatile const static thread_local class good_test x82;
+thread_local const static class good_test x83;
+const thread_local static class good_test x84;
+thread_local volatile static class good_test x85;
+volatile thread_local static class good_test x86;
+thread_local const static volatile class good_test x87;
+thread_local const volatile static class good_test x88;
+const thread_local static volatile class good_test x89;
+const thread_local volatile static class good_test x90;
+const volatile thread_local static class good_test x91;
+thread_local volatile static const class good_test x92;
+thread_local volatile const static class good_test x93;
+volatile thread_local static const class good_test x94;
+volatile thread_local const static class good_test x95;
+volatile const thread_local static class good_test x96;
+

Modified: trunk/tools/POSIX.inc
===================================================================
--- trunk/tools/POSIX.inc	2011-03-26 12:03:55 UTC (rev 624)
+++ trunk/tools/POSIX.inc	2011-03-27 05:59:31 UTC (rev 625)
@@ -24,10 +24,14 @@
 
 # maintainer-mode build rules for derived files
 # PYTHON variable does require configuration when moved to another machine
+# remember to use 'make all' when these rules are in effect 
 PYTHON = c:\Python26\python
+SED = sed
 SELECTIVE_CUT = tools\selective_cut.py
 SUPPRESS_CUT = tools\suppress_cut.py
 
+# source code
+# touch causes unnecessary build noise here
 CPreproc_pp.hpp: CPreproc.hpp
 	$(PYTHON) $(SELECTIVE_CUT) cpp CPreproc.hpp CPreproc_pp.hpp.alt 
 	if cmp -s CPreproc_pp.hpp CPreproc_pp.hpp.alt; then rm CPreproc_pp.hpp.alt ; else mv CPreproc_pp.hpp.alt CPreproc_pp.hpp; fi
@@ -50,7 +54,7 @@
 
 CSupport_pp.hpp: CSupport.hpp
 	$(PYTHON) $(SELECTIVE_CUT) cpp CSupport.hpp CSupport_pp.hpp.alt 
-	if cmp -s CSupport_pp.hpp CSupport_pp.hpp.alt; then rm CSupport_pp.hpp.alt ; else mv CSupport_pp.hpp.alt CSupport_pp.hpp; fi
+	if cmp -s CSupport_pp.hpp CSupport_pp.hpp.alt; then rm CSupport_pp.hpp.alt; else mv CSupport_pp.hpp.alt CSupport_pp.hpp; fi
 
 CSupport_pp.cpp: CSupport.cpp.in
 	$(PYTHON) $(SELECTIVE_CUT) cpp CSupport.cpp.in CSupport_pp.cpp.alt2 
@@ -71,7 +75,7 @@
 type_system_pp.hpp: type_system.hpp.in
 	$(PYTHON) $(SELECTIVE_CUT) cpp type_system.hpp.in type_system_pp.hpp.alt2 
 	$(PYTHON) $(SUPPRESS_CUT) nocpp type_system_pp.hpp.alt2 type_system_pp.hpp.alt 
-	if cmp -s type_system_pp.hpp type_system_pp.hpp.alt; then rm type_system_pp.hpp.alt ; else mv type_system_pp.hpp.alt type_system_pp.hpp; fi
+	if cmp -s type_system_pp.hpp type_system_pp.hpp.alt; then rm type_system_pp.hpp.alt; else mv type_system_pp.hpp.alt type_system_pp.hpp; fi
 	rm type_system_pp.hpp.alt2
 
 type_system.hpp: type_system.hpp.in
@@ -92,4 +96,15 @@
 	if cmp -s type_system.cpp type_system.cpp.alt; then rm type_system.cpp.alt ; else mv type_system.cpp.alt type_system.cpp; fi
 	rm type_system.cpp.alt2
 
+# test case support
+regenerate_tests: tests/zcc/decl.C99/Pass_class_def.hpp \
+	tests/zcc/decl.C99/Pass_class_def_decl.hpp
 
+tests/zcc/decl.C99/Pass_class_def.hpp: tests/zcc/decl.C99/Pass_struct_def.hpp
+	$(SED) -e s/struct/class/ tests/zcc/decl.C99/Pass_struct_def.hpp > tests/zcc/decl.C99/Pass_class_def.hpp.alt 
+	if cmp -s tests/zcc/decl.C99/Pass_class_def.hpp tests/zcc/decl.C99/Pass_class_def.hpp.alt; then rm tests/zcc/decl.C99/Pass_class_def.hpp.alt ; else mv tests/zcc/decl.C99/Pass_class_def.hpp.alt tests/zcc/decl.C99/Pass_class_def.hpp; fi
+
+tests/zcc/decl.C99/Pass_class_def_decl.hpp: tests/zcc/decl.C99/Pass_struct_def_decl.hpp
+	$(SED) -e s/struct/class/ tests/zcc/decl.C99/Pass_struct_def_decl.hpp > tests/zcc/decl.C99/Pass_class_def_decl.hpp.alt 
+	if cmp -s tests/zcc/decl.C99/Pass_class_def_decl.hpp tests/zcc/decl.C99/Pass_class_def_decl.hpp.alt; then rm tests/zcc/decl.C99/Pass_class_def_decl.hpp.alt ; else mv tests/zcc/decl.C99/Pass_class_def_decl.hpp.alt tests/zcc/decl.C99/Pass_class_def_decl.hpp; fi
+	



